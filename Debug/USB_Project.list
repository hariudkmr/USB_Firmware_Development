
USB_Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000014b8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08001668  08001668  00011668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001754  08001754  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08001754  08001754  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001754  08001754  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001754  08001754  00011754  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001758  08001758  00011758  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  0800175c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000068  080017c4  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000a0  080017c4  000200a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000202a  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000007db  00000000  00000000  000220c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000188  00000000  00000000  000228a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000130  00000000  00000000  00022a28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001942a  00000000  00000000  00022b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001f05  00000000  00000000  0003bf82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008c624  00000000  00000000  0003de87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000ca4ab  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000dd0  00000000  00000000  000ca500  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         00000084  00000000  00000000  000cb2d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000117  00000000  00000000  000cb354  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001650 	.word	0x08001650

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001650 	.word	0x08001650

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b02      	cmp	r3, #2
 800032a:	d00a      	beq.n	8000342 <_get_log_level_string+0x26>
 800032c:	2b02      	cmp	r3, #2
 800032e:	dc0a      	bgt.n	8000346 <_get_log_level_string+0x2a>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d002      	beq.n	800033a <_get_log_level_string+0x1e>
 8000334:	2b01      	cmp	r3, #1
 8000336:	d002      	beq.n	800033e <_get_log_level_string+0x22>
 8000338:	e005      	b.n	8000346 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800033a:	4b06      	ldr	r3, [pc, #24]	; (8000354 <_get_log_level_string+0x38>)
 800033c:	e003      	b.n	8000346 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800033e:	4b06      	ldr	r3, [pc, #24]	; (8000358 <_get_log_level_string+0x3c>)
 8000340:	e001      	b.n	8000346 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000342:	4b06      	ldr	r3, [pc, #24]	; (800035c <_get_log_level_string+0x40>)
 8000344:	e7ff      	b.n	8000346 <_get_log_level_string+0x2a>
    }
}
 8000346:	4618      	mov	r0, r3
 8000348:	370c      	adds	r7, #12
 800034a:	46bd      	mov	sp, r7
 800034c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	08001668 	.word	0x08001668
 8000358:	08001670 	.word	0x08001670
 800035c:	08001678 	.word	0x08001678

08000360 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b084      	sub	sp, #16
 8000364:	af00      	add	r7, sp, #0
 8000366:	4603      	mov	r3, r0
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
 800036c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level){
 800036e:	4b0f      	ldr	r3, [pc, #60]	; (80003ac <_log+0x4c>)
 8000370:	781b      	ldrb	r3, [r3, #0]
 8000372:	7bfa      	ldrb	r2, [r7, #15]
 8000374:	429a      	cmp	r2, r3
 8000376:	d814      	bhi.n	80003a2 <_log+0x42>
        return;
    }

	printf("[%s] ", _get_log_level_string(log_level));
 8000378:	7bfb      	ldrb	r3, [r7, #15]
 800037a:	4618      	mov	r0, r3
 800037c:	f7ff ffce 	bl	800031c <_get_log_level_string>
 8000380:	4603      	mov	r3, r0
 8000382:	4619      	mov	r1, r3
 8000384:	480a      	ldr	r0, [pc, #40]	; (80003b0 <_log+0x50>)
 8000386:	f000 fc67 	bl	8000c58 <iprintf>
	vfprintf(stdout, format, args);
 800038a:	4b0a      	ldr	r3, [pc, #40]	; (80003b4 <_log+0x54>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	689b      	ldr	r3, [r3, #8]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	68b9      	ldr	r1, [r7, #8]
 8000394:	4618      	mov	r0, r3
 8000396:	f000 fac1 	bl	800091c <vfiprintf>
	printf("\n");
 800039a:	200a      	movs	r0, #10
 800039c:	f000 fc74 	bl	8000c88 <putchar>
 80003a0:	e000      	b.n	80003a4 <_log+0x44>
        return;
 80003a2:	bf00      	nop
}
 80003a4:	3710      	adds	r7, #16
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bd80      	pop	{r7, pc}
 80003aa:	bf00      	nop
 80003ac:	20000000 	.word	0x20000000
 80003b0:	08001680 	.word	0x08001680
 80003b4:	20000004 	.word	0x20000004

080003b8 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b8:	b40f      	push	{r0, r1, r2, r3}
 80003ba:	b580      	push	{r7, lr}
 80003bc:	b082      	sub	sp, #8
 80003be:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003c0:	f107 0314 	add.w	r3, r7, #20
 80003c4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	6939      	ldr	r1, [r7, #16]
 80003ca:	2001      	movs	r0, #1
 80003cc:	f7ff ffc8 	bl	8000360 <_log>
    va_end(args);
}
 80003d0:	bf00      	nop
 80003d2:	3708      	adds	r7, #8
 80003d4:	46bd      	mov	sp, r7
 80003d6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003da:	b004      	add	sp, #16
 80003dc:	4770      	bx	lr
	...

080003e0 <main>:
#include "logger.h"
#include "usb_framework.h"


int main(void)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	af00      	add	r7, sp, #0
	log_info("Program Entry-Point");
 80003e4:	4802      	ldr	r0, [pc, #8]	; (80003f0 <main+0x10>)
 80003e6:	f7ff ffe7 	bl	80003b8 <log_info>
	usbd_initialize();
 80003ea:	f000 f8dd 	bl	80005a8 <usbd_initialize>
    /* Loop forever */
	for(;;);
 80003ee:	e7fe      	b.n	80003ee <main+0xe>
 80003f0:	080016a8 	.word	0x080016a8

080003f4 <configure_clock>:

LogLevel system_log_level = LOG_LEVEL_DEBUG;
uint32_t SystemCoreClock = 72000000; // 72 MHz

static void configure_clock()
{
 80003f4:	b480      	push	{r7}
 80003f6:	af00      	add	r7, sp, #0
	// Configures flash latency.
	MODIFY_REG(FLASH->ACR,
 80003f8:	4b25      	ldr	r3, [pc, #148]	; (8000490 <configure_clock+0x9c>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	f023 0307 	bic.w	r3, r3, #7
 8000400:	4a23      	ldr	r2, [pc, #140]	; (8000490 <configure_clock+0x9c>)
 8000402:	f043 0302 	orr.w	r3, r3, #2
 8000406:	6013      	str	r3, [r2, #0]
		FLASH_ACR_LATENCY,
		_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS) //FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
	);

	// Enables HSE.
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000408:	4b22      	ldr	r3, [pc, #136]	; (8000494 <configure_clock+0xa0>)
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	4a21      	ldr	r2, [pc, #132]	; (8000494 <configure_clock+0xa0>)
 800040e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000412:	6013      	str	r3, [r2, #0]

	// Waits until HSE is stable.
	while (!READ_BIT(RCC->CR, RCC_CR_HSERDY));
 8000414:	bf00      	nop
 8000416:	4b1f      	ldr	r3, [pc, #124]	; (8000494 <configure_clock+0xa0>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800041e:	2b00      	cmp	r3, #0
 8000420:	d0f9      	beq.n	8000416 <configure_clock+0x22>

	// Configures PLL: source = HSE, PLLCLK = 72MHz.
	MODIFY_REG(RCC->PLLCFGR,
 8000422:	4b1c      	ldr	r3, [pc, #112]	; (8000494 <configure_clock+0xa0>)
 8000424:	685b      	ldr	r3, [r3, #4]
 8000426:	4a1c      	ldr	r2, [pc, #112]	; (8000498 <configure_clock+0xa4>)
 8000428:	401a      	ands	r2, r3
 800042a:	491a      	ldr	r1, [pc, #104]	; (8000494 <configure_clock+0xa0>)
 800042c:	4b1b      	ldr	r3, [pc, #108]	; (800049c <configure_clock+0xa8>)
 800042e:	4313      	orrs	r3, r2
 8000430:	604b      	str	r3, [r1, #4]
		RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
		_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE
	);

	// Enables PLL module.
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 8000432:	4b18      	ldr	r3, [pc, #96]	; (8000494 <configure_clock+0xa0>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a17      	ldr	r2, [pc, #92]	; (8000494 <configure_clock+0xa0>)
 8000438:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800043c:	6013      	str	r3, [r2, #0]

	// Waits until PLL is stable.
	while (!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800043e:	bf00      	nop
 8000440:	4b14      	ldr	r3, [pc, #80]	; (8000494 <configure_clock+0xa0>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000448:	2b00      	cmp	r3, #0
 800044a:	d0f9      	beq.n	8000440 <configure_clock+0x4c>

	// Switches system clock to PLL.
	MODIFY_REG(RCC->CFGR,
 800044c:	4b11      	ldr	r3, [pc, #68]	; (8000494 <configure_clock+0xa0>)
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	f023 0303 	bic.w	r3, r3, #3
 8000454:	4a0f      	ldr	r2, [pc, #60]	; (8000494 <configure_clock+0xa0>)
 8000456:	f043 0302 	orr.w	r3, r3, #2
 800045a:	6093      	str	r3, [r2, #8]
		RCC_CFGR_SW,
		_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
	);

	// Configures PPRE1 = 2, (PPRE2 = 1, HPRE = 1 by default).
	MODIFY_REG(RCC->CFGR,
 800045c:	4b0d      	ldr	r3, [pc, #52]	; (8000494 <configure_clock+0xa0>)
 800045e:	689b      	ldr	r3, [r3, #8]
 8000460:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000464:	4a0b      	ldr	r2, [pc, #44]	; (8000494 <configure_clock+0xa0>)
 8000466:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800046a:	6093      	str	r3, [r2, #8]
		RCC_CFGR_PPRE1,
		_VAL2FLD(RCC_CFGR_PPRE1, 4)
	);

	// Waits until PLL is used.
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 800046c:	bf00      	nop
 800046e:	4b09      	ldr	r3, [pc, #36]	; (8000494 <configure_clock+0xa0>)
 8000470:	689b      	ldr	r3, [r3, #8]
 8000472:	f003 030c 	and.w	r3, r3, #12
 8000476:	2b08      	cmp	r3, #8
 8000478:	d1f9      	bne.n	800046e <configure_clock+0x7a>

	// Disables HSI.
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800047a:	4b06      	ldr	r3, [pc, #24]	; (8000494 <configure_clock+0xa0>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	4a05      	ldr	r2, [pc, #20]	; (8000494 <configure_clock+0xa0>)
 8000480:	f023 0301 	bic.w	r3, r3, #1
 8000484:	6013      	str	r3, [r2, #0]
}
 8000486:	bf00      	nop
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr
 8000490:	40023c00 	.word	0x40023c00
 8000494:	40023800 	.word	0x40023800
 8000498:	f0bc8000 	.word	0xf0bc8000
 800049c:	03401204 	.word	0x03401204

080004a0 <SystemInit>:
		_VAL2FLD(GPIO_MODER_MODER8, 2)
	);
}

void SystemInit(void)
{
 80004a0:	b580      	push	{r7, lr}
 80004a2:	af00      	add	r7, sp, #0
//	configure_mco1();
	configure_clock();
 80004a4:	f7ff ffa6 	bl	80003f4 <configure_clock>
}
 80004a8:	bf00      	nop
 80004aa:	bd80      	pop	{r7, pc}

080004ac <initialize_gpio_pins>:
#include "logger.h"
#include "usb_driver.h"
#include "usb_standards.h"

void initialize_gpio_pins()
{
 80004ac:	b480      	push	{r7}
 80004ae:	af00      	add	r7, sp, #0
	// Enables the clock for GPIOA.
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);
 80004b0:	4b0d      	ldr	r3, [pc, #52]	; (80004e8 <initialize_gpio_pins+0x3c>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b4:	4a0c      	ldr	r2, [pc, #48]	; (80004e8 <initialize_gpio_pins+0x3c>)
 80004b6:	f043 0301 	orr.w	r3, r3, #1
 80004ba:	6313      	str	r3, [r2, #48]	; 0x30

	// Sets alternate function 10 for: PA11 (-), and PA12 (+).
	MODIFY_REG(GPIOA->AFR[1],
 80004bc:	4b0b      	ldr	r3, [pc, #44]	; (80004ec <initialize_gpio_pins+0x40>)
 80004be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004c0:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
 80004c4:	4a09      	ldr	r2, [pc, #36]	; (80004ec <initialize_gpio_pins+0x40>)
 80004c6:	f443 232a 	orr.w	r3, r3, #696320	; 0xaa000
 80004ca:	6253      	str	r3, [r2, #36]	; 0x24
		GPIO_AFRH_AFSEL11 | GPIO_AFRH_AFSEL12,
		_VAL2FLD(GPIO_AFRH_AFSEL11, 0xA) | _VAL2FLD(GPIO_AFRH_AFSEL12, 0xA)
	);

	// Configures USB pins (in GPIOA) to work in alternate function mode.
	MODIFY_REG(GPIOA->MODER,
 80004cc:	4b07      	ldr	r3, [pc, #28]	; (80004ec <initialize_gpio_pins+0x40>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	f023 7370 	bic.w	r3, r3, #62914560	; 0x3c00000
 80004d4:	4a05      	ldr	r2, [pc, #20]	; (80004ec <initialize_gpio_pins+0x40>)
 80004d6:	f043 7320 	orr.w	r3, r3, #41943040	; 0x2800000
 80004da:	6013      	str	r3, [r2, #0]
		GPIO_MODER_MODER11 | GPIO_MODER_MODER12,
		_VAL2FLD(GPIO_MODER_MODER11, 2) | _VAL2FLD(GPIO_MODER_MODER12, 2)
	);
}
 80004dc:	bf00      	nop
 80004de:	46bd      	mov	sp, r7
 80004e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e4:	4770      	bx	lr
 80004e6:	bf00      	nop
 80004e8:	40023800 	.word	0x40023800
 80004ec:	40020000 	.word	0x40020000

080004f0 <initialize_core>:

void initialize_core()
{
 80004f0:	b480      	push	{r7}
 80004f2:	af00      	add	r7, sp, #0
	// Enables the clock for USB core FullSpeed
	SET_BIT(RCC->AHB2ENR, RCC_AHB2ENR_OTGFSEN);
 80004f4:	4b1d      	ldr	r3, [pc, #116]	; (800056c <initialize_core+0x7c>)
 80004f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80004f8:	4a1c      	ldr	r2, [pc, #112]	; (800056c <initialize_core+0x7c>)
 80004fa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80004fe:	6353      	str	r3, [r2, #52]	; 0x34

	// Configures the USB core to run in device mode, and to use the embedded full-speed PHY.
	MODIFY_REG(USB_OTG_FS->GUSBCFG,
 8000500:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8000504:	68db      	ldr	r3, [r3, #12]
 8000506:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800050a:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 800050e:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000512:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000516:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 800051a:	60d3      	str	r3, [r2, #12]
		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
		USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT, 0x09)
	);

	// Configures the device to run in full speed mode.
	MODIFY_REG(USB_OTG_FS_DEVICE->DCFG,
 800051c:	4b14      	ldr	r3, [pc, #80]	; (8000570 <initialize_core+0x80>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a13      	ldr	r2, [pc, #76]	; (8000570 <initialize_core+0x80>)
 8000522:	f043 0303 	orr.w	r3, r3, #3
 8000526:	6013      	str	r3, [r2, #0]
		USB_OTG_DCFG_DSPD,
		_VAL2FLD(USB_OTG_DCFG_DSPD, 0x03)
	);

	// Enables VBUS sensing device.
	SET_BIT(USB_OTG_FS->GCCFG, USB_OTG_GCCFG_VBUSBSEN);
 8000528:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 800052c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800052e:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000532:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000536:	6393      	str	r3, [r2, #56]	; 0x38

	// Unmasks the main USB core interrupts.
	SET_BIT(USB_OTG_FS->GINTMSK,
 8000538:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 800053c:	699a      	ldr	r2, [r3, #24]
 800053e:	f04f 41a0 	mov.w	r1, #1342177280	; 0x50000000
 8000542:	4b0c      	ldr	r3, [pc, #48]	; (8000574 <initialize_core+0x84>)
 8000544:	4313      	orrs	r3, r2
 8000546:	618b      	str	r3, [r1, #24]
		USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_WUIM | USB_OTG_GINTMSK_IEPINT |
		USB_OTG_GINTSTS_OEPINT | USB_OTG_GINTMSK_RXFLVLM
	);

	// Clears all pending core interrupts.
	WRITE_REG(USB_OTG_FS->GINTSTS, 0xFFFFFFFF);
 8000548:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 800054c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000550:	615a      	str	r2, [r3, #20]

	// Unmasks USB global interrupt.
	SET_BIT(USB_OTG_FS->GAHBCFG, USB_OTG_GAHBCFG_GINT);
 8000552:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8000556:	689b      	ldr	r3, [r3, #8]
 8000558:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 800055c:	f043 0301 	orr.w	r3, r3, #1
 8000560:	6093      	str	r3, [r2, #8]

}
 8000562:	bf00      	nop
 8000564:	46bd      	mov	sp, r7
 8000566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056a:	4770      	bx	lr
 800056c:	40023800 	.word	0x40023800
 8000570:	50000800 	.word	0x50000800
 8000574:	800c3818 	.word	0x800c3818

08000578 <connect>:

/** \brief Connects the USB device to the bus.
 */
void connect()
{
 8000578:	b480      	push	{r7}
 800057a:	af00      	add	r7, sp, #0
	// Powers the transceivers on.
    SET_BIT(USB_OTG_FS->GCCFG, USB_OTG_GCCFG_PWRDWN);
 800057c:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8000580:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000582:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000586:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800058a:	6393      	str	r3, [r2, #56]	; 0x38

	// Connects the device to the bus.
    CLEAR_BIT(USB_OTG_FS_DEVICE->DCTL, USB_OTG_DCTL_SDIS);
 800058c:	4b05      	ldr	r3, [pc, #20]	; (80005a4 <connect+0x2c>)
 800058e:	685b      	ldr	r3, [r3, #4]
 8000590:	4a04      	ldr	r2, [pc, #16]	; (80005a4 <connect+0x2c>)
 8000592:	f023 0302 	bic.w	r3, r3, #2
 8000596:	6053      	str	r3, [r2, #4]
}
 8000598:	bf00      	nop
 800059a:	46bd      	mov	sp, r7
 800059c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop
 80005a4:	50000800 	.word	0x50000800

080005a8 <usbd_initialize>:
 *      Author: hari
 */

#include "usb_framework.h"

void usbd_initialize(){
 80005a8:	b580      	push	{r7, lr}
 80005aa:	af00      	add	r7, sp, #0

	initialize_gpio_pins();
 80005ac:	f7ff ff7e 	bl	80004ac <initialize_gpio_pins>
	initialize_core();
 80005b0:	f7ff ff9e 	bl	80004f0 <initialize_core>
	connect();
 80005b4:	f7ff ffe0 	bl	8000578 <connect>


}
 80005b8:	bf00      	nop
 80005ba:	bd80      	pop	{r7, pc}

080005bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005bc:	480d      	ldr	r0, [pc, #52]	; (80005f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005be:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005c0:	f7ff ff6e 	bl	80004a0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005c4:	480c      	ldr	r0, [pc, #48]	; (80005f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80005c6:	490d      	ldr	r1, [pc, #52]	; (80005fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80005c8:	4a0d      	ldr	r2, [pc, #52]	; (8000600 <LoopForever+0xe>)
  movs r3, #0
 80005ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005cc:	e002      	b.n	80005d4 <LoopCopyDataInit>

080005ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005d2:	3304      	adds	r3, #4

080005d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005d8:	d3f9      	bcc.n	80005ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005da:	4a0a      	ldr	r2, [pc, #40]	; (8000604 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005dc:	4c0a      	ldr	r4, [pc, #40]	; (8000608 <LoopForever+0x16>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005e0:	e001      	b.n	80005e6 <LoopFillZerobss>

080005e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005e4:	3204      	adds	r2, #4

080005e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005e8:	d3fb      	bcc.n	80005e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ea:	f000 f811 	bl	8000610 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005ee:	f7ff fef7 	bl	80003e0 <main>

080005f2 <LoopForever>:

LoopForever:
    b LoopForever
 80005f2:	e7fe      	b.n	80005f2 <LoopForever>
  ldr   r0, =_estack
 80005f4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005fc:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000600:	0800175c 	.word	0x0800175c
  ldr r2, =_sbss
 8000604:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000608:	200000a0 	.word	0x200000a0

0800060c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>
	...

08000610 <__libc_init_array>:
 8000610:	b570      	push	{r4, r5, r6, lr}
 8000612:	4d0d      	ldr	r5, [pc, #52]	; (8000648 <__libc_init_array+0x38>)
 8000614:	4c0d      	ldr	r4, [pc, #52]	; (800064c <__libc_init_array+0x3c>)
 8000616:	1b64      	subs	r4, r4, r5
 8000618:	10a4      	asrs	r4, r4, #2
 800061a:	2600      	movs	r6, #0
 800061c:	42a6      	cmp	r6, r4
 800061e:	d109      	bne.n	8000634 <__libc_init_array+0x24>
 8000620:	4d0b      	ldr	r5, [pc, #44]	; (8000650 <__libc_init_array+0x40>)
 8000622:	4c0c      	ldr	r4, [pc, #48]	; (8000654 <__libc_init_array+0x44>)
 8000624:	f001 f814 	bl	8001650 <_init>
 8000628:	1b64      	subs	r4, r4, r5
 800062a:	10a4      	asrs	r4, r4, #2
 800062c:	2600      	movs	r6, #0
 800062e:	42a6      	cmp	r6, r4
 8000630:	d105      	bne.n	800063e <__libc_init_array+0x2e>
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f855 3b04 	ldr.w	r3, [r5], #4
 8000638:	4798      	blx	r3
 800063a:	3601      	adds	r6, #1
 800063c:	e7ee      	b.n	800061c <__libc_init_array+0xc>
 800063e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000642:	4798      	blx	r3
 8000644:	3601      	adds	r6, #1
 8000646:	e7f2      	b.n	800062e <__libc_init_array+0x1e>
 8000648:	08001754 	.word	0x08001754
 800064c:	08001754 	.word	0x08001754
 8000650:	08001754 	.word	0x08001754
 8000654:	08001758 	.word	0x08001758

08000658 <memset>:
 8000658:	4402      	add	r2, r0
 800065a:	4603      	mov	r3, r0
 800065c:	4293      	cmp	r3, r2
 800065e:	d100      	bne.n	8000662 <memset+0xa>
 8000660:	4770      	bx	lr
 8000662:	f803 1b01 	strb.w	r1, [r3], #1
 8000666:	e7f9      	b.n	800065c <memset+0x4>

08000668 <__sfputc_r>:
 8000668:	6893      	ldr	r3, [r2, #8]
 800066a:	3b01      	subs	r3, #1
 800066c:	2b00      	cmp	r3, #0
 800066e:	b410      	push	{r4}
 8000670:	6093      	str	r3, [r2, #8]
 8000672:	da08      	bge.n	8000686 <__sfputc_r+0x1e>
 8000674:	6994      	ldr	r4, [r2, #24]
 8000676:	42a3      	cmp	r3, r4
 8000678:	db01      	blt.n	800067e <__sfputc_r+0x16>
 800067a:	290a      	cmp	r1, #10
 800067c:	d103      	bne.n	8000686 <__sfputc_r+0x1e>
 800067e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000682:	f000 bb17 	b.w	8000cb4 <__swbuf_r>
 8000686:	6813      	ldr	r3, [r2, #0]
 8000688:	1c58      	adds	r0, r3, #1
 800068a:	6010      	str	r0, [r2, #0]
 800068c:	7019      	strb	r1, [r3, #0]
 800068e:	4608      	mov	r0, r1
 8000690:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000694:	4770      	bx	lr

08000696 <__sfputs_r>:
 8000696:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000698:	4606      	mov	r6, r0
 800069a:	460f      	mov	r7, r1
 800069c:	4614      	mov	r4, r2
 800069e:	18d5      	adds	r5, r2, r3
 80006a0:	42ac      	cmp	r4, r5
 80006a2:	d101      	bne.n	80006a8 <__sfputs_r+0x12>
 80006a4:	2000      	movs	r0, #0
 80006a6:	e007      	b.n	80006b8 <__sfputs_r+0x22>
 80006a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006ac:	463a      	mov	r2, r7
 80006ae:	4630      	mov	r0, r6
 80006b0:	f7ff ffda 	bl	8000668 <__sfputc_r>
 80006b4:	1c43      	adds	r3, r0, #1
 80006b6:	d1f3      	bne.n	80006a0 <__sfputs_r+0xa>
 80006b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080006bc <_vfiprintf_r>:
 80006bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006c0:	460d      	mov	r5, r1
 80006c2:	b09d      	sub	sp, #116	; 0x74
 80006c4:	4614      	mov	r4, r2
 80006c6:	4698      	mov	r8, r3
 80006c8:	4606      	mov	r6, r0
 80006ca:	b118      	cbz	r0, 80006d4 <_vfiprintf_r+0x18>
 80006cc:	6983      	ldr	r3, [r0, #24]
 80006ce:	b90b      	cbnz	r3, 80006d4 <_vfiprintf_r+0x18>
 80006d0:	f000 fcca 	bl	8001068 <__sinit>
 80006d4:	4b89      	ldr	r3, [pc, #548]	; (80008fc <_vfiprintf_r+0x240>)
 80006d6:	429d      	cmp	r5, r3
 80006d8:	d11b      	bne.n	8000712 <_vfiprintf_r+0x56>
 80006da:	6875      	ldr	r5, [r6, #4]
 80006dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80006de:	07d9      	lsls	r1, r3, #31
 80006e0:	d405      	bmi.n	80006ee <_vfiprintf_r+0x32>
 80006e2:	89ab      	ldrh	r3, [r5, #12]
 80006e4:	059a      	lsls	r2, r3, #22
 80006e6:	d402      	bmi.n	80006ee <_vfiprintf_r+0x32>
 80006e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80006ea:	f000 fd5b 	bl	80011a4 <__retarget_lock_acquire_recursive>
 80006ee:	89ab      	ldrh	r3, [r5, #12]
 80006f0:	071b      	lsls	r3, r3, #28
 80006f2:	d501      	bpl.n	80006f8 <_vfiprintf_r+0x3c>
 80006f4:	692b      	ldr	r3, [r5, #16]
 80006f6:	b9eb      	cbnz	r3, 8000734 <_vfiprintf_r+0x78>
 80006f8:	4629      	mov	r1, r5
 80006fa:	4630      	mov	r0, r6
 80006fc:	f000 fb2c 	bl	8000d58 <__swsetup_r>
 8000700:	b1c0      	cbz	r0, 8000734 <_vfiprintf_r+0x78>
 8000702:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000704:	07dc      	lsls	r4, r3, #31
 8000706:	d50e      	bpl.n	8000726 <_vfiprintf_r+0x6a>
 8000708:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800070c:	b01d      	add	sp, #116	; 0x74
 800070e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000712:	4b7b      	ldr	r3, [pc, #492]	; (8000900 <_vfiprintf_r+0x244>)
 8000714:	429d      	cmp	r5, r3
 8000716:	d101      	bne.n	800071c <_vfiprintf_r+0x60>
 8000718:	68b5      	ldr	r5, [r6, #8]
 800071a:	e7df      	b.n	80006dc <_vfiprintf_r+0x20>
 800071c:	4b79      	ldr	r3, [pc, #484]	; (8000904 <_vfiprintf_r+0x248>)
 800071e:	429d      	cmp	r5, r3
 8000720:	bf08      	it	eq
 8000722:	68f5      	ldreq	r5, [r6, #12]
 8000724:	e7da      	b.n	80006dc <_vfiprintf_r+0x20>
 8000726:	89ab      	ldrh	r3, [r5, #12]
 8000728:	0598      	lsls	r0, r3, #22
 800072a:	d4ed      	bmi.n	8000708 <_vfiprintf_r+0x4c>
 800072c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800072e:	f000 fd3a 	bl	80011a6 <__retarget_lock_release_recursive>
 8000732:	e7e9      	b.n	8000708 <_vfiprintf_r+0x4c>
 8000734:	2300      	movs	r3, #0
 8000736:	9309      	str	r3, [sp, #36]	; 0x24
 8000738:	2320      	movs	r3, #32
 800073a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800073e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000742:	2330      	movs	r3, #48	; 0x30
 8000744:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000908 <_vfiprintf_r+0x24c>
 8000748:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800074c:	f04f 0901 	mov.w	r9, #1
 8000750:	4623      	mov	r3, r4
 8000752:	469a      	mov	sl, r3
 8000754:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000758:	b10a      	cbz	r2, 800075e <_vfiprintf_r+0xa2>
 800075a:	2a25      	cmp	r2, #37	; 0x25
 800075c:	d1f9      	bne.n	8000752 <_vfiprintf_r+0x96>
 800075e:	ebba 0b04 	subs.w	fp, sl, r4
 8000762:	d00b      	beq.n	800077c <_vfiprintf_r+0xc0>
 8000764:	465b      	mov	r3, fp
 8000766:	4622      	mov	r2, r4
 8000768:	4629      	mov	r1, r5
 800076a:	4630      	mov	r0, r6
 800076c:	f7ff ff93 	bl	8000696 <__sfputs_r>
 8000770:	3001      	adds	r0, #1
 8000772:	f000 80aa 	beq.w	80008ca <_vfiprintf_r+0x20e>
 8000776:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000778:	445a      	add	r2, fp
 800077a:	9209      	str	r2, [sp, #36]	; 0x24
 800077c:	f89a 3000 	ldrb.w	r3, [sl]
 8000780:	2b00      	cmp	r3, #0
 8000782:	f000 80a2 	beq.w	80008ca <_vfiprintf_r+0x20e>
 8000786:	2300      	movs	r3, #0
 8000788:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800078c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000790:	f10a 0a01 	add.w	sl, sl, #1
 8000794:	9304      	str	r3, [sp, #16]
 8000796:	9307      	str	r3, [sp, #28]
 8000798:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800079c:	931a      	str	r3, [sp, #104]	; 0x68
 800079e:	4654      	mov	r4, sl
 80007a0:	2205      	movs	r2, #5
 80007a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007a6:	4858      	ldr	r0, [pc, #352]	; (8000908 <_vfiprintf_r+0x24c>)
 80007a8:	f7ff fd22 	bl	80001f0 <memchr>
 80007ac:	9a04      	ldr	r2, [sp, #16]
 80007ae:	b9d8      	cbnz	r0, 80007e8 <_vfiprintf_r+0x12c>
 80007b0:	06d1      	lsls	r1, r2, #27
 80007b2:	bf44      	itt	mi
 80007b4:	2320      	movmi	r3, #32
 80007b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007ba:	0713      	lsls	r3, r2, #28
 80007bc:	bf44      	itt	mi
 80007be:	232b      	movmi	r3, #43	; 0x2b
 80007c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80007c4:	f89a 3000 	ldrb.w	r3, [sl]
 80007c8:	2b2a      	cmp	r3, #42	; 0x2a
 80007ca:	d015      	beq.n	80007f8 <_vfiprintf_r+0x13c>
 80007cc:	9a07      	ldr	r2, [sp, #28]
 80007ce:	4654      	mov	r4, sl
 80007d0:	2000      	movs	r0, #0
 80007d2:	f04f 0c0a 	mov.w	ip, #10
 80007d6:	4621      	mov	r1, r4
 80007d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80007dc:	3b30      	subs	r3, #48	; 0x30
 80007de:	2b09      	cmp	r3, #9
 80007e0:	d94e      	bls.n	8000880 <_vfiprintf_r+0x1c4>
 80007e2:	b1b0      	cbz	r0, 8000812 <_vfiprintf_r+0x156>
 80007e4:	9207      	str	r2, [sp, #28]
 80007e6:	e014      	b.n	8000812 <_vfiprintf_r+0x156>
 80007e8:	eba0 0308 	sub.w	r3, r0, r8
 80007ec:	fa09 f303 	lsl.w	r3, r9, r3
 80007f0:	4313      	orrs	r3, r2
 80007f2:	9304      	str	r3, [sp, #16]
 80007f4:	46a2      	mov	sl, r4
 80007f6:	e7d2      	b.n	800079e <_vfiprintf_r+0xe2>
 80007f8:	9b03      	ldr	r3, [sp, #12]
 80007fa:	1d19      	adds	r1, r3, #4
 80007fc:	681b      	ldr	r3, [r3, #0]
 80007fe:	9103      	str	r1, [sp, #12]
 8000800:	2b00      	cmp	r3, #0
 8000802:	bfbb      	ittet	lt
 8000804:	425b      	neglt	r3, r3
 8000806:	f042 0202 	orrlt.w	r2, r2, #2
 800080a:	9307      	strge	r3, [sp, #28]
 800080c:	9307      	strlt	r3, [sp, #28]
 800080e:	bfb8      	it	lt
 8000810:	9204      	strlt	r2, [sp, #16]
 8000812:	7823      	ldrb	r3, [r4, #0]
 8000814:	2b2e      	cmp	r3, #46	; 0x2e
 8000816:	d10c      	bne.n	8000832 <_vfiprintf_r+0x176>
 8000818:	7863      	ldrb	r3, [r4, #1]
 800081a:	2b2a      	cmp	r3, #42	; 0x2a
 800081c:	d135      	bne.n	800088a <_vfiprintf_r+0x1ce>
 800081e:	9b03      	ldr	r3, [sp, #12]
 8000820:	1d1a      	adds	r2, r3, #4
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	9203      	str	r2, [sp, #12]
 8000826:	2b00      	cmp	r3, #0
 8000828:	bfb8      	it	lt
 800082a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800082e:	3402      	adds	r4, #2
 8000830:	9305      	str	r3, [sp, #20]
 8000832:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000918 <_vfiprintf_r+0x25c>
 8000836:	7821      	ldrb	r1, [r4, #0]
 8000838:	2203      	movs	r2, #3
 800083a:	4650      	mov	r0, sl
 800083c:	f7ff fcd8 	bl	80001f0 <memchr>
 8000840:	b140      	cbz	r0, 8000854 <_vfiprintf_r+0x198>
 8000842:	2340      	movs	r3, #64	; 0x40
 8000844:	eba0 000a 	sub.w	r0, r0, sl
 8000848:	fa03 f000 	lsl.w	r0, r3, r0
 800084c:	9b04      	ldr	r3, [sp, #16]
 800084e:	4303      	orrs	r3, r0
 8000850:	3401      	adds	r4, #1
 8000852:	9304      	str	r3, [sp, #16]
 8000854:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000858:	482c      	ldr	r0, [pc, #176]	; (800090c <_vfiprintf_r+0x250>)
 800085a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800085e:	2206      	movs	r2, #6
 8000860:	f7ff fcc6 	bl	80001f0 <memchr>
 8000864:	2800      	cmp	r0, #0
 8000866:	d03f      	beq.n	80008e8 <_vfiprintf_r+0x22c>
 8000868:	4b29      	ldr	r3, [pc, #164]	; (8000910 <_vfiprintf_r+0x254>)
 800086a:	bb1b      	cbnz	r3, 80008b4 <_vfiprintf_r+0x1f8>
 800086c:	9b03      	ldr	r3, [sp, #12]
 800086e:	3307      	adds	r3, #7
 8000870:	f023 0307 	bic.w	r3, r3, #7
 8000874:	3308      	adds	r3, #8
 8000876:	9303      	str	r3, [sp, #12]
 8000878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800087a:	443b      	add	r3, r7
 800087c:	9309      	str	r3, [sp, #36]	; 0x24
 800087e:	e767      	b.n	8000750 <_vfiprintf_r+0x94>
 8000880:	fb0c 3202 	mla	r2, ip, r2, r3
 8000884:	460c      	mov	r4, r1
 8000886:	2001      	movs	r0, #1
 8000888:	e7a5      	b.n	80007d6 <_vfiprintf_r+0x11a>
 800088a:	2300      	movs	r3, #0
 800088c:	3401      	adds	r4, #1
 800088e:	9305      	str	r3, [sp, #20]
 8000890:	4619      	mov	r1, r3
 8000892:	f04f 0c0a 	mov.w	ip, #10
 8000896:	4620      	mov	r0, r4
 8000898:	f810 2b01 	ldrb.w	r2, [r0], #1
 800089c:	3a30      	subs	r2, #48	; 0x30
 800089e:	2a09      	cmp	r2, #9
 80008a0:	d903      	bls.n	80008aa <_vfiprintf_r+0x1ee>
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	d0c5      	beq.n	8000832 <_vfiprintf_r+0x176>
 80008a6:	9105      	str	r1, [sp, #20]
 80008a8:	e7c3      	b.n	8000832 <_vfiprintf_r+0x176>
 80008aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80008ae:	4604      	mov	r4, r0
 80008b0:	2301      	movs	r3, #1
 80008b2:	e7f0      	b.n	8000896 <_vfiprintf_r+0x1da>
 80008b4:	ab03      	add	r3, sp, #12
 80008b6:	9300      	str	r3, [sp, #0]
 80008b8:	462a      	mov	r2, r5
 80008ba:	4b16      	ldr	r3, [pc, #88]	; (8000914 <_vfiprintf_r+0x258>)
 80008bc:	a904      	add	r1, sp, #16
 80008be:	4630      	mov	r0, r6
 80008c0:	f3af 8000 	nop.w
 80008c4:	4607      	mov	r7, r0
 80008c6:	1c78      	adds	r0, r7, #1
 80008c8:	d1d6      	bne.n	8000878 <_vfiprintf_r+0x1bc>
 80008ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80008cc:	07d9      	lsls	r1, r3, #31
 80008ce:	d405      	bmi.n	80008dc <_vfiprintf_r+0x220>
 80008d0:	89ab      	ldrh	r3, [r5, #12]
 80008d2:	059a      	lsls	r2, r3, #22
 80008d4:	d402      	bmi.n	80008dc <_vfiprintf_r+0x220>
 80008d6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80008d8:	f000 fc65 	bl	80011a6 <__retarget_lock_release_recursive>
 80008dc:	89ab      	ldrh	r3, [r5, #12]
 80008de:	065b      	lsls	r3, r3, #25
 80008e0:	f53f af12 	bmi.w	8000708 <_vfiprintf_r+0x4c>
 80008e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80008e6:	e711      	b.n	800070c <_vfiprintf_r+0x50>
 80008e8:	ab03      	add	r3, sp, #12
 80008ea:	9300      	str	r3, [sp, #0]
 80008ec:	462a      	mov	r2, r5
 80008ee:	4b09      	ldr	r3, [pc, #36]	; (8000914 <_vfiprintf_r+0x258>)
 80008f0:	a904      	add	r1, sp, #16
 80008f2:	4630      	mov	r0, r6
 80008f4:	f000 f88a 	bl	8000a0c <_printf_i>
 80008f8:	e7e4      	b.n	80008c4 <_vfiprintf_r+0x208>
 80008fa:	bf00      	nop
 80008fc:	08001714 	.word	0x08001714
 8000900:	08001734 	.word	0x08001734
 8000904:	080016f4 	.word	0x080016f4
 8000908:	080016c0 	.word	0x080016c0
 800090c:	080016ca 	.word	0x080016ca
 8000910:	00000000 	.word	0x00000000
 8000914:	08000697 	.word	0x08000697
 8000918:	080016c6 	.word	0x080016c6

0800091c <vfiprintf>:
 800091c:	4613      	mov	r3, r2
 800091e:	460a      	mov	r2, r1
 8000920:	4601      	mov	r1, r0
 8000922:	4802      	ldr	r0, [pc, #8]	; (800092c <vfiprintf+0x10>)
 8000924:	6800      	ldr	r0, [r0, #0]
 8000926:	f7ff bec9 	b.w	80006bc <_vfiprintf_r>
 800092a:	bf00      	nop
 800092c:	20000004 	.word	0x20000004

08000930 <_printf_common>:
 8000930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000934:	4616      	mov	r6, r2
 8000936:	4699      	mov	r9, r3
 8000938:	688a      	ldr	r2, [r1, #8]
 800093a:	690b      	ldr	r3, [r1, #16]
 800093c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000940:	4293      	cmp	r3, r2
 8000942:	bfb8      	it	lt
 8000944:	4613      	movlt	r3, r2
 8000946:	6033      	str	r3, [r6, #0]
 8000948:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800094c:	4607      	mov	r7, r0
 800094e:	460c      	mov	r4, r1
 8000950:	b10a      	cbz	r2, 8000956 <_printf_common+0x26>
 8000952:	3301      	adds	r3, #1
 8000954:	6033      	str	r3, [r6, #0]
 8000956:	6823      	ldr	r3, [r4, #0]
 8000958:	0699      	lsls	r1, r3, #26
 800095a:	bf42      	ittt	mi
 800095c:	6833      	ldrmi	r3, [r6, #0]
 800095e:	3302      	addmi	r3, #2
 8000960:	6033      	strmi	r3, [r6, #0]
 8000962:	6825      	ldr	r5, [r4, #0]
 8000964:	f015 0506 	ands.w	r5, r5, #6
 8000968:	d106      	bne.n	8000978 <_printf_common+0x48>
 800096a:	f104 0a19 	add.w	sl, r4, #25
 800096e:	68e3      	ldr	r3, [r4, #12]
 8000970:	6832      	ldr	r2, [r6, #0]
 8000972:	1a9b      	subs	r3, r3, r2
 8000974:	42ab      	cmp	r3, r5
 8000976:	dc26      	bgt.n	80009c6 <_printf_common+0x96>
 8000978:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800097c:	1e13      	subs	r3, r2, #0
 800097e:	6822      	ldr	r2, [r4, #0]
 8000980:	bf18      	it	ne
 8000982:	2301      	movne	r3, #1
 8000984:	0692      	lsls	r2, r2, #26
 8000986:	d42b      	bmi.n	80009e0 <_printf_common+0xb0>
 8000988:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800098c:	4649      	mov	r1, r9
 800098e:	4638      	mov	r0, r7
 8000990:	47c0      	blx	r8
 8000992:	3001      	adds	r0, #1
 8000994:	d01e      	beq.n	80009d4 <_printf_common+0xa4>
 8000996:	6823      	ldr	r3, [r4, #0]
 8000998:	68e5      	ldr	r5, [r4, #12]
 800099a:	6832      	ldr	r2, [r6, #0]
 800099c:	f003 0306 	and.w	r3, r3, #6
 80009a0:	2b04      	cmp	r3, #4
 80009a2:	bf08      	it	eq
 80009a4:	1aad      	subeq	r5, r5, r2
 80009a6:	68a3      	ldr	r3, [r4, #8]
 80009a8:	6922      	ldr	r2, [r4, #16]
 80009aa:	bf0c      	ite	eq
 80009ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80009b0:	2500      	movne	r5, #0
 80009b2:	4293      	cmp	r3, r2
 80009b4:	bfc4      	itt	gt
 80009b6:	1a9b      	subgt	r3, r3, r2
 80009b8:	18ed      	addgt	r5, r5, r3
 80009ba:	2600      	movs	r6, #0
 80009bc:	341a      	adds	r4, #26
 80009be:	42b5      	cmp	r5, r6
 80009c0:	d11a      	bne.n	80009f8 <_printf_common+0xc8>
 80009c2:	2000      	movs	r0, #0
 80009c4:	e008      	b.n	80009d8 <_printf_common+0xa8>
 80009c6:	2301      	movs	r3, #1
 80009c8:	4652      	mov	r2, sl
 80009ca:	4649      	mov	r1, r9
 80009cc:	4638      	mov	r0, r7
 80009ce:	47c0      	blx	r8
 80009d0:	3001      	adds	r0, #1
 80009d2:	d103      	bne.n	80009dc <_printf_common+0xac>
 80009d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009dc:	3501      	adds	r5, #1
 80009de:	e7c6      	b.n	800096e <_printf_common+0x3e>
 80009e0:	18e1      	adds	r1, r4, r3
 80009e2:	1c5a      	adds	r2, r3, #1
 80009e4:	2030      	movs	r0, #48	; 0x30
 80009e6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80009ea:	4422      	add	r2, r4
 80009ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80009f0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80009f4:	3302      	adds	r3, #2
 80009f6:	e7c7      	b.n	8000988 <_printf_common+0x58>
 80009f8:	2301      	movs	r3, #1
 80009fa:	4622      	mov	r2, r4
 80009fc:	4649      	mov	r1, r9
 80009fe:	4638      	mov	r0, r7
 8000a00:	47c0      	blx	r8
 8000a02:	3001      	adds	r0, #1
 8000a04:	d0e6      	beq.n	80009d4 <_printf_common+0xa4>
 8000a06:	3601      	adds	r6, #1
 8000a08:	e7d9      	b.n	80009be <_printf_common+0x8e>
	...

08000a0c <_printf_i>:
 8000a0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000a10:	460c      	mov	r4, r1
 8000a12:	4691      	mov	r9, r2
 8000a14:	7e27      	ldrb	r7, [r4, #24]
 8000a16:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000a18:	2f78      	cmp	r7, #120	; 0x78
 8000a1a:	4680      	mov	r8, r0
 8000a1c:	469a      	mov	sl, r3
 8000a1e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000a22:	d807      	bhi.n	8000a34 <_printf_i+0x28>
 8000a24:	2f62      	cmp	r7, #98	; 0x62
 8000a26:	d80a      	bhi.n	8000a3e <_printf_i+0x32>
 8000a28:	2f00      	cmp	r7, #0
 8000a2a:	f000 80d8 	beq.w	8000bde <_printf_i+0x1d2>
 8000a2e:	2f58      	cmp	r7, #88	; 0x58
 8000a30:	f000 80a3 	beq.w	8000b7a <_printf_i+0x16e>
 8000a34:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000a38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000a3c:	e03a      	b.n	8000ab4 <_printf_i+0xa8>
 8000a3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000a42:	2b15      	cmp	r3, #21
 8000a44:	d8f6      	bhi.n	8000a34 <_printf_i+0x28>
 8000a46:	a001      	add	r0, pc, #4	; (adr r0, 8000a4c <_printf_i+0x40>)
 8000a48:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000a4c:	08000aa5 	.word	0x08000aa5
 8000a50:	08000ab9 	.word	0x08000ab9
 8000a54:	08000a35 	.word	0x08000a35
 8000a58:	08000a35 	.word	0x08000a35
 8000a5c:	08000a35 	.word	0x08000a35
 8000a60:	08000a35 	.word	0x08000a35
 8000a64:	08000ab9 	.word	0x08000ab9
 8000a68:	08000a35 	.word	0x08000a35
 8000a6c:	08000a35 	.word	0x08000a35
 8000a70:	08000a35 	.word	0x08000a35
 8000a74:	08000a35 	.word	0x08000a35
 8000a78:	08000bc5 	.word	0x08000bc5
 8000a7c:	08000ae9 	.word	0x08000ae9
 8000a80:	08000ba7 	.word	0x08000ba7
 8000a84:	08000a35 	.word	0x08000a35
 8000a88:	08000a35 	.word	0x08000a35
 8000a8c:	08000be7 	.word	0x08000be7
 8000a90:	08000a35 	.word	0x08000a35
 8000a94:	08000ae9 	.word	0x08000ae9
 8000a98:	08000a35 	.word	0x08000a35
 8000a9c:	08000a35 	.word	0x08000a35
 8000aa0:	08000baf 	.word	0x08000baf
 8000aa4:	680b      	ldr	r3, [r1, #0]
 8000aa6:	1d1a      	adds	r2, r3, #4
 8000aa8:	681b      	ldr	r3, [r3, #0]
 8000aaa:	600a      	str	r2, [r1, #0]
 8000aac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000ab0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ab4:	2301      	movs	r3, #1
 8000ab6:	e0a3      	b.n	8000c00 <_printf_i+0x1f4>
 8000ab8:	6825      	ldr	r5, [r4, #0]
 8000aba:	6808      	ldr	r0, [r1, #0]
 8000abc:	062e      	lsls	r6, r5, #24
 8000abe:	f100 0304 	add.w	r3, r0, #4
 8000ac2:	d50a      	bpl.n	8000ada <_printf_i+0xce>
 8000ac4:	6805      	ldr	r5, [r0, #0]
 8000ac6:	600b      	str	r3, [r1, #0]
 8000ac8:	2d00      	cmp	r5, #0
 8000aca:	da03      	bge.n	8000ad4 <_printf_i+0xc8>
 8000acc:	232d      	movs	r3, #45	; 0x2d
 8000ace:	426d      	negs	r5, r5
 8000ad0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ad4:	485e      	ldr	r0, [pc, #376]	; (8000c50 <_printf_i+0x244>)
 8000ad6:	230a      	movs	r3, #10
 8000ad8:	e019      	b.n	8000b0e <_printf_i+0x102>
 8000ada:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000ade:	6805      	ldr	r5, [r0, #0]
 8000ae0:	600b      	str	r3, [r1, #0]
 8000ae2:	bf18      	it	ne
 8000ae4:	b22d      	sxthne	r5, r5
 8000ae6:	e7ef      	b.n	8000ac8 <_printf_i+0xbc>
 8000ae8:	680b      	ldr	r3, [r1, #0]
 8000aea:	6825      	ldr	r5, [r4, #0]
 8000aec:	1d18      	adds	r0, r3, #4
 8000aee:	6008      	str	r0, [r1, #0]
 8000af0:	0628      	lsls	r0, r5, #24
 8000af2:	d501      	bpl.n	8000af8 <_printf_i+0xec>
 8000af4:	681d      	ldr	r5, [r3, #0]
 8000af6:	e002      	b.n	8000afe <_printf_i+0xf2>
 8000af8:	0669      	lsls	r1, r5, #25
 8000afa:	d5fb      	bpl.n	8000af4 <_printf_i+0xe8>
 8000afc:	881d      	ldrh	r5, [r3, #0]
 8000afe:	4854      	ldr	r0, [pc, #336]	; (8000c50 <_printf_i+0x244>)
 8000b00:	2f6f      	cmp	r7, #111	; 0x6f
 8000b02:	bf0c      	ite	eq
 8000b04:	2308      	moveq	r3, #8
 8000b06:	230a      	movne	r3, #10
 8000b08:	2100      	movs	r1, #0
 8000b0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000b0e:	6866      	ldr	r6, [r4, #4]
 8000b10:	60a6      	str	r6, [r4, #8]
 8000b12:	2e00      	cmp	r6, #0
 8000b14:	bfa2      	ittt	ge
 8000b16:	6821      	ldrge	r1, [r4, #0]
 8000b18:	f021 0104 	bicge.w	r1, r1, #4
 8000b1c:	6021      	strge	r1, [r4, #0]
 8000b1e:	b90d      	cbnz	r5, 8000b24 <_printf_i+0x118>
 8000b20:	2e00      	cmp	r6, #0
 8000b22:	d04d      	beq.n	8000bc0 <_printf_i+0x1b4>
 8000b24:	4616      	mov	r6, r2
 8000b26:	fbb5 f1f3 	udiv	r1, r5, r3
 8000b2a:	fb03 5711 	mls	r7, r3, r1, r5
 8000b2e:	5dc7      	ldrb	r7, [r0, r7]
 8000b30:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000b34:	462f      	mov	r7, r5
 8000b36:	42bb      	cmp	r3, r7
 8000b38:	460d      	mov	r5, r1
 8000b3a:	d9f4      	bls.n	8000b26 <_printf_i+0x11a>
 8000b3c:	2b08      	cmp	r3, #8
 8000b3e:	d10b      	bne.n	8000b58 <_printf_i+0x14c>
 8000b40:	6823      	ldr	r3, [r4, #0]
 8000b42:	07df      	lsls	r7, r3, #31
 8000b44:	d508      	bpl.n	8000b58 <_printf_i+0x14c>
 8000b46:	6923      	ldr	r3, [r4, #16]
 8000b48:	6861      	ldr	r1, [r4, #4]
 8000b4a:	4299      	cmp	r1, r3
 8000b4c:	bfde      	ittt	le
 8000b4e:	2330      	movle	r3, #48	; 0x30
 8000b50:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000b54:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8000b58:	1b92      	subs	r2, r2, r6
 8000b5a:	6122      	str	r2, [r4, #16]
 8000b5c:	f8cd a000 	str.w	sl, [sp]
 8000b60:	464b      	mov	r3, r9
 8000b62:	aa03      	add	r2, sp, #12
 8000b64:	4621      	mov	r1, r4
 8000b66:	4640      	mov	r0, r8
 8000b68:	f7ff fee2 	bl	8000930 <_printf_common>
 8000b6c:	3001      	adds	r0, #1
 8000b6e:	d14c      	bne.n	8000c0a <_printf_i+0x1fe>
 8000b70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b74:	b004      	add	sp, #16
 8000b76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b7a:	4835      	ldr	r0, [pc, #212]	; (8000c50 <_printf_i+0x244>)
 8000b7c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000b80:	6823      	ldr	r3, [r4, #0]
 8000b82:	680e      	ldr	r6, [r1, #0]
 8000b84:	061f      	lsls	r7, r3, #24
 8000b86:	f856 5b04 	ldr.w	r5, [r6], #4
 8000b8a:	600e      	str	r6, [r1, #0]
 8000b8c:	d514      	bpl.n	8000bb8 <_printf_i+0x1ac>
 8000b8e:	07d9      	lsls	r1, r3, #31
 8000b90:	bf44      	itt	mi
 8000b92:	f043 0320 	orrmi.w	r3, r3, #32
 8000b96:	6023      	strmi	r3, [r4, #0]
 8000b98:	b91d      	cbnz	r5, 8000ba2 <_printf_i+0x196>
 8000b9a:	6823      	ldr	r3, [r4, #0]
 8000b9c:	f023 0320 	bic.w	r3, r3, #32
 8000ba0:	6023      	str	r3, [r4, #0]
 8000ba2:	2310      	movs	r3, #16
 8000ba4:	e7b0      	b.n	8000b08 <_printf_i+0xfc>
 8000ba6:	6823      	ldr	r3, [r4, #0]
 8000ba8:	f043 0320 	orr.w	r3, r3, #32
 8000bac:	6023      	str	r3, [r4, #0]
 8000bae:	2378      	movs	r3, #120	; 0x78
 8000bb0:	4828      	ldr	r0, [pc, #160]	; (8000c54 <_printf_i+0x248>)
 8000bb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000bb6:	e7e3      	b.n	8000b80 <_printf_i+0x174>
 8000bb8:	065e      	lsls	r6, r3, #25
 8000bba:	bf48      	it	mi
 8000bbc:	b2ad      	uxthmi	r5, r5
 8000bbe:	e7e6      	b.n	8000b8e <_printf_i+0x182>
 8000bc0:	4616      	mov	r6, r2
 8000bc2:	e7bb      	b.n	8000b3c <_printf_i+0x130>
 8000bc4:	680b      	ldr	r3, [r1, #0]
 8000bc6:	6826      	ldr	r6, [r4, #0]
 8000bc8:	6960      	ldr	r0, [r4, #20]
 8000bca:	1d1d      	adds	r5, r3, #4
 8000bcc:	600d      	str	r5, [r1, #0]
 8000bce:	0635      	lsls	r5, r6, #24
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	d501      	bpl.n	8000bd8 <_printf_i+0x1cc>
 8000bd4:	6018      	str	r0, [r3, #0]
 8000bd6:	e002      	b.n	8000bde <_printf_i+0x1d2>
 8000bd8:	0671      	lsls	r1, r6, #25
 8000bda:	d5fb      	bpl.n	8000bd4 <_printf_i+0x1c8>
 8000bdc:	8018      	strh	r0, [r3, #0]
 8000bde:	2300      	movs	r3, #0
 8000be0:	6123      	str	r3, [r4, #16]
 8000be2:	4616      	mov	r6, r2
 8000be4:	e7ba      	b.n	8000b5c <_printf_i+0x150>
 8000be6:	680b      	ldr	r3, [r1, #0]
 8000be8:	1d1a      	adds	r2, r3, #4
 8000bea:	600a      	str	r2, [r1, #0]
 8000bec:	681e      	ldr	r6, [r3, #0]
 8000bee:	6862      	ldr	r2, [r4, #4]
 8000bf0:	2100      	movs	r1, #0
 8000bf2:	4630      	mov	r0, r6
 8000bf4:	f7ff fafc 	bl	80001f0 <memchr>
 8000bf8:	b108      	cbz	r0, 8000bfe <_printf_i+0x1f2>
 8000bfa:	1b80      	subs	r0, r0, r6
 8000bfc:	6060      	str	r0, [r4, #4]
 8000bfe:	6863      	ldr	r3, [r4, #4]
 8000c00:	6123      	str	r3, [r4, #16]
 8000c02:	2300      	movs	r3, #0
 8000c04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000c08:	e7a8      	b.n	8000b5c <_printf_i+0x150>
 8000c0a:	6923      	ldr	r3, [r4, #16]
 8000c0c:	4632      	mov	r2, r6
 8000c0e:	4649      	mov	r1, r9
 8000c10:	4640      	mov	r0, r8
 8000c12:	47d0      	blx	sl
 8000c14:	3001      	adds	r0, #1
 8000c16:	d0ab      	beq.n	8000b70 <_printf_i+0x164>
 8000c18:	6823      	ldr	r3, [r4, #0]
 8000c1a:	079b      	lsls	r3, r3, #30
 8000c1c:	d413      	bmi.n	8000c46 <_printf_i+0x23a>
 8000c1e:	68e0      	ldr	r0, [r4, #12]
 8000c20:	9b03      	ldr	r3, [sp, #12]
 8000c22:	4298      	cmp	r0, r3
 8000c24:	bfb8      	it	lt
 8000c26:	4618      	movlt	r0, r3
 8000c28:	e7a4      	b.n	8000b74 <_printf_i+0x168>
 8000c2a:	2301      	movs	r3, #1
 8000c2c:	4632      	mov	r2, r6
 8000c2e:	4649      	mov	r1, r9
 8000c30:	4640      	mov	r0, r8
 8000c32:	47d0      	blx	sl
 8000c34:	3001      	adds	r0, #1
 8000c36:	d09b      	beq.n	8000b70 <_printf_i+0x164>
 8000c38:	3501      	adds	r5, #1
 8000c3a:	68e3      	ldr	r3, [r4, #12]
 8000c3c:	9903      	ldr	r1, [sp, #12]
 8000c3e:	1a5b      	subs	r3, r3, r1
 8000c40:	42ab      	cmp	r3, r5
 8000c42:	dcf2      	bgt.n	8000c2a <_printf_i+0x21e>
 8000c44:	e7eb      	b.n	8000c1e <_printf_i+0x212>
 8000c46:	2500      	movs	r5, #0
 8000c48:	f104 0619 	add.w	r6, r4, #25
 8000c4c:	e7f5      	b.n	8000c3a <_printf_i+0x22e>
 8000c4e:	bf00      	nop
 8000c50:	080016d1 	.word	0x080016d1
 8000c54:	080016e2 	.word	0x080016e2

08000c58 <iprintf>:
 8000c58:	b40f      	push	{r0, r1, r2, r3}
 8000c5a:	4b0a      	ldr	r3, [pc, #40]	; (8000c84 <iprintf+0x2c>)
 8000c5c:	b513      	push	{r0, r1, r4, lr}
 8000c5e:	681c      	ldr	r4, [r3, #0]
 8000c60:	b124      	cbz	r4, 8000c6c <iprintf+0x14>
 8000c62:	69a3      	ldr	r3, [r4, #24]
 8000c64:	b913      	cbnz	r3, 8000c6c <iprintf+0x14>
 8000c66:	4620      	mov	r0, r4
 8000c68:	f000 f9fe 	bl	8001068 <__sinit>
 8000c6c:	ab05      	add	r3, sp, #20
 8000c6e:	9a04      	ldr	r2, [sp, #16]
 8000c70:	68a1      	ldr	r1, [r4, #8]
 8000c72:	9301      	str	r3, [sp, #4]
 8000c74:	4620      	mov	r0, r4
 8000c76:	f7ff fd21 	bl	80006bc <_vfiprintf_r>
 8000c7a:	b002      	add	sp, #8
 8000c7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c80:	b004      	add	sp, #16
 8000c82:	4770      	bx	lr
 8000c84:	20000004 	.word	0x20000004

08000c88 <putchar>:
 8000c88:	4b09      	ldr	r3, [pc, #36]	; (8000cb0 <putchar+0x28>)
 8000c8a:	b513      	push	{r0, r1, r4, lr}
 8000c8c:	681c      	ldr	r4, [r3, #0]
 8000c8e:	4601      	mov	r1, r0
 8000c90:	b134      	cbz	r4, 8000ca0 <putchar+0x18>
 8000c92:	69a3      	ldr	r3, [r4, #24]
 8000c94:	b923      	cbnz	r3, 8000ca0 <putchar+0x18>
 8000c96:	9001      	str	r0, [sp, #4]
 8000c98:	4620      	mov	r0, r4
 8000c9a:	f000 f9e5 	bl	8001068 <__sinit>
 8000c9e:	9901      	ldr	r1, [sp, #4]
 8000ca0:	68a2      	ldr	r2, [r4, #8]
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	b002      	add	sp, #8
 8000ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000caa:	f000 bb8b 	b.w	80013c4 <_putc_r>
 8000cae:	bf00      	nop
 8000cb0:	20000004 	.word	0x20000004

08000cb4 <__swbuf_r>:
 8000cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb6:	460e      	mov	r6, r1
 8000cb8:	4614      	mov	r4, r2
 8000cba:	4605      	mov	r5, r0
 8000cbc:	b118      	cbz	r0, 8000cc6 <__swbuf_r+0x12>
 8000cbe:	6983      	ldr	r3, [r0, #24]
 8000cc0:	b90b      	cbnz	r3, 8000cc6 <__swbuf_r+0x12>
 8000cc2:	f000 f9d1 	bl	8001068 <__sinit>
 8000cc6:	4b21      	ldr	r3, [pc, #132]	; (8000d4c <__swbuf_r+0x98>)
 8000cc8:	429c      	cmp	r4, r3
 8000cca:	d12b      	bne.n	8000d24 <__swbuf_r+0x70>
 8000ccc:	686c      	ldr	r4, [r5, #4]
 8000cce:	69a3      	ldr	r3, [r4, #24]
 8000cd0:	60a3      	str	r3, [r4, #8]
 8000cd2:	89a3      	ldrh	r3, [r4, #12]
 8000cd4:	071a      	lsls	r2, r3, #28
 8000cd6:	d52f      	bpl.n	8000d38 <__swbuf_r+0x84>
 8000cd8:	6923      	ldr	r3, [r4, #16]
 8000cda:	b36b      	cbz	r3, 8000d38 <__swbuf_r+0x84>
 8000cdc:	6923      	ldr	r3, [r4, #16]
 8000cde:	6820      	ldr	r0, [r4, #0]
 8000ce0:	1ac0      	subs	r0, r0, r3
 8000ce2:	6963      	ldr	r3, [r4, #20]
 8000ce4:	b2f6      	uxtb	r6, r6
 8000ce6:	4283      	cmp	r3, r0
 8000ce8:	4637      	mov	r7, r6
 8000cea:	dc04      	bgt.n	8000cf6 <__swbuf_r+0x42>
 8000cec:	4621      	mov	r1, r4
 8000cee:	4628      	mov	r0, r5
 8000cf0:	f000 f926 	bl	8000f40 <_fflush_r>
 8000cf4:	bb30      	cbnz	r0, 8000d44 <__swbuf_r+0x90>
 8000cf6:	68a3      	ldr	r3, [r4, #8]
 8000cf8:	3b01      	subs	r3, #1
 8000cfa:	60a3      	str	r3, [r4, #8]
 8000cfc:	6823      	ldr	r3, [r4, #0]
 8000cfe:	1c5a      	adds	r2, r3, #1
 8000d00:	6022      	str	r2, [r4, #0]
 8000d02:	701e      	strb	r6, [r3, #0]
 8000d04:	6963      	ldr	r3, [r4, #20]
 8000d06:	3001      	adds	r0, #1
 8000d08:	4283      	cmp	r3, r0
 8000d0a:	d004      	beq.n	8000d16 <__swbuf_r+0x62>
 8000d0c:	89a3      	ldrh	r3, [r4, #12]
 8000d0e:	07db      	lsls	r3, r3, #31
 8000d10:	d506      	bpl.n	8000d20 <__swbuf_r+0x6c>
 8000d12:	2e0a      	cmp	r6, #10
 8000d14:	d104      	bne.n	8000d20 <__swbuf_r+0x6c>
 8000d16:	4621      	mov	r1, r4
 8000d18:	4628      	mov	r0, r5
 8000d1a:	f000 f911 	bl	8000f40 <_fflush_r>
 8000d1e:	b988      	cbnz	r0, 8000d44 <__swbuf_r+0x90>
 8000d20:	4638      	mov	r0, r7
 8000d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d24:	4b0a      	ldr	r3, [pc, #40]	; (8000d50 <__swbuf_r+0x9c>)
 8000d26:	429c      	cmp	r4, r3
 8000d28:	d101      	bne.n	8000d2e <__swbuf_r+0x7a>
 8000d2a:	68ac      	ldr	r4, [r5, #8]
 8000d2c:	e7cf      	b.n	8000cce <__swbuf_r+0x1a>
 8000d2e:	4b09      	ldr	r3, [pc, #36]	; (8000d54 <__swbuf_r+0xa0>)
 8000d30:	429c      	cmp	r4, r3
 8000d32:	bf08      	it	eq
 8000d34:	68ec      	ldreq	r4, [r5, #12]
 8000d36:	e7ca      	b.n	8000cce <__swbuf_r+0x1a>
 8000d38:	4621      	mov	r1, r4
 8000d3a:	4628      	mov	r0, r5
 8000d3c:	f000 f80c 	bl	8000d58 <__swsetup_r>
 8000d40:	2800      	cmp	r0, #0
 8000d42:	d0cb      	beq.n	8000cdc <__swbuf_r+0x28>
 8000d44:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000d48:	e7ea      	b.n	8000d20 <__swbuf_r+0x6c>
 8000d4a:	bf00      	nop
 8000d4c:	08001714 	.word	0x08001714
 8000d50:	08001734 	.word	0x08001734
 8000d54:	080016f4 	.word	0x080016f4

08000d58 <__swsetup_r>:
 8000d58:	4b32      	ldr	r3, [pc, #200]	; (8000e24 <__swsetup_r+0xcc>)
 8000d5a:	b570      	push	{r4, r5, r6, lr}
 8000d5c:	681d      	ldr	r5, [r3, #0]
 8000d5e:	4606      	mov	r6, r0
 8000d60:	460c      	mov	r4, r1
 8000d62:	b125      	cbz	r5, 8000d6e <__swsetup_r+0x16>
 8000d64:	69ab      	ldr	r3, [r5, #24]
 8000d66:	b913      	cbnz	r3, 8000d6e <__swsetup_r+0x16>
 8000d68:	4628      	mov	r0, r5
 8000d6a:	f000 f97d 	bl	8001068 <__sinit>
 8000d6e:	4b2e      	ldr	r3, [pc, #184]	; (8000e28 <__swsetup_r+0xd0>)
 8000d70:	429c      	cmp	r4, r3
 8000d72:	d10f      	bne.n	8000d94 <__swsetup_r+0x3c>
 8000d74:	686c      	ldr	r4, [r5, #4]
 8000d76:	89a3      	ldrh	r3, [r4, #12]
 8000d78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d7c:	0719      	lsls	r1, r3, #28
 8000d7e:	d42c      	bmi.n	8000dda <__swsetup_r+0x82>
 8000d80:	06dd      	lsls	r5, r3, #27
 8000d82:	d411      	bmi.n	8000da8 <__swsetup_r+0x50>
 8000d84:	2309      	movs	r3, #9
 8000d86:	6033      	str	r3, [r6, #0]
 8000d88:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000d8c:	81a3      	strh	r3, [r4, #12]
 8000d8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d92:	e03e      	b.n	8000e12 <__swsetup_r+0xba>
 8000d94:	4b25      	ldr	r3, [pc, #148]	; (8000e2c <__swsetup_r+0xd4>)
 8000d96:	429c      	cmp	r4, r3
 8000d98:	d101      	bne.n	8000d9e <__swsetup_r+0x46>
 8000d9a:	68ac      	ldr	r4, [r5, #8]
 8000d9c:	e7eb      	b.n	8000d76 <__swsetup_r+0x1e>
 8000d9e:	4b24      	ldr	r3, [pc, #144]	; (8000e30 <__swsetup_r+0xd8>)
 8000da0:	429c      	cmp	r4, r3
 8000da2:	bf08      	it	eq
 8000da4:	68ec      	ldreq	r4, [r5, #12]
 8000da6:	e7e6      	b.n	8000d76 <__swsetup_r+0x1e>
 8000da8:	0758      	lsls	r0, r3, #29
 8000daa:	d512      	bpl.n	8000dd2 <__swsetup_r+0x7a>
 8000dac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dae:	b141      	cbz	r1, 8000dc2 <__swsetup_r+0x6a>
 8000db0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000db4:	4299      	cmp	r1, r3
 8000db6:	d002      	beq.n	8000dbe <__swsetup_r+0x66>
 8000db8:	4630      	mov	r0, r6
 8000dba:	f000 fa59 	bl	8001270 <_free_r>
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	6363      	str	r3, [r4, #52]	; 0x34
 8000dc2:	89a3      	ldrh	r3, [r4, #12]
 8000dc4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dc8:	81a3      	strh	r3, [r4, #12]
 8000dca:	2300      	movs	r3, #0
 8000dcc:	6063      	str	r3, [r4, #4]
 8000dce:	6923      	ldr	r3, [r4, #16]
 8000dd0:	6023      	str	r3, [r4, #0]
 8000dd2:	89a3      	ldrh	r3, [r4, #12]
 8000dd4:	f043 0308 	orr.w	r3, r3, #8
 8000dd8:	81a3      	strh	r3, [r4, #12]
 8000dda:	6923      	ldr	r3, [r4, #16]
 8000ddc:	b94b      	cbnz	r3, 8000df2 <__swsetup_r+0x9a>
 8000dde:	89a3      	ldrh	r3, [r4, #12]
 8000de0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000de4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000de8:	d003      	beq.n	8000df2 <__swsetup_r+0x9a>
 8000dea:	4621      	mov	r1, r4
 8000dec:	4630      	mov	r0, r6
 8000dee:	f000 f9ff 	bl	80011f0 <__smakebuf_r>
 8000df2:	89a0      	ldrh	r0, [r4, #12]
 8000df4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000df8:	f010 0301 	ands.w	r3, r0, #1
 8000dfc:	d00a      	beq.n	8000e14 <__swsetup_r+0xbc>
 8000dfe:	2300      	movs	r3, #0
 8000e00:	60a3      	str	r3, [r4, #8]
 8000e02:	6963      	ldr	r3, [r4, #20]
 8000e04:	425b      	negs	r3, r3
 8000e06:	61a3      	str	r3, [r4, #24]
 8000e08:	6923      	ldr	r3, [r4, #16]
 8000e0a:	b943      	cbnz	r3, 8000e1e <__swsetup_r+0xc6>
 8000e0c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e10:	d1ba      	bne.n	8000d88 <__swsetup_r+0x30>
 8000e12:	bd70      	pop	{r4, r5, r6, pc}
 8000e14:	0781      	lsls	r1, r0, #30
 8000e16:	bf58      	it	pl
 8000e18:	6963      	ldrpl	r3, [r4, #20]
 8000e1a:	60a3      	str	r3, [r4, #8]
 8000e1c:	e7f4      	b.n	8000e08 <__swsetup_r+0xb0>
 8000e1e:	2000      	movs	r0, #0
 8000e20:	e7f7      	b.n	8000e12 <__swsetup_r+0xba>
 8000e22:	bf00      	nop
 8000e24:	20000004 	.word	0x20000004
 8000e28:	08001714 	.word	0x08001714
 8000e2c:	08001734 	.word	0x08001734
 8000e30:	080016f4 	.word	0x080016f4

08000e34 <__sflush_r>:
 8000e34:	898a      	ldrh	r2, [r1, #12]
 8000e36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e3a:	4605      	mov	r5, r0
 8000e3c:	0710      	lsls	r0, r2, #28
 8000e3e:	460c      	mov	r4, r1
 8000e40:	d458      	bmi.n	8000ef4 <__sflush_r+0xc0>
 8000e42:	684b      	ldr	r3, [r1, #4]
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	dc05      	bgt.n	8000e54 <__sflush_r+0x20>
 8000e48:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000e4a:	2b00      	cmp	r3, #0
 8000e4c:	dc02      	bgt.n	8000e54 <__sflush_r+0x20>
 8000e4e:	2000      	movs	r0, #0
 8000e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e54:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e56:	2e00      	cmp	r6, #0
 8000e58:	d0f9      	beq.n	8000e4e <__sflush_r+0x1a>
 8000e5a:	2300      	movs	r3, #0
 8000e5c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000e60:	682f      	ldr	r7, [r5, #0]
 8000e62:	602b      	str	r3, [r5, #0]
 8000e64:	d032      	beq.n	8000ecc <__sflush_r+0x98>
 8000e66:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e68:	89a3      	ldrh	r3, [r4, #12]
 8000e6a:	075a      	lsls	r2, r3, #29
 8000e6c:	d505      	bpl.n	8000e7a <__sflush_r+0x46>
 8000e6e:	6863      	ldr	r3, [r4, #4]
 8000e70:	1ac0      	subs	r0, r0, r3
 8000e72:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e74:	b10b      	cbz	r3, 8000e7a <__sflush_r+0x46>
 8000e76:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e78:	1ac0      	subs	r0, r0, r3
 8000e7a:	2300      	movs	r3, #0
 8000e7c:	4602      	mov	r2, r0
 8000e7e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e80:	6a21      	ldr	r1, [r4, #32]
 8000e82:	4628      	mov	r0, r5
 8000e84:	47b0      	blx	r6
 8000e86:	1c43      	adds	r3, r0, #1
 8000e88:	89a3      	ldrh	r3, [r4, #12]
 8000e8a:	d106      	bne.n	8000e9a <__sflush_r+0x66>
 8000e8c:	6829      	ldr	r1, [r5, #0]
 8000e8e:	291d      	cmp	r1, #29
 8000e90:	d82c      	bhi.n	8000eec <__sflush_r+0xb8>
 8000e92:	4a2a      	ldr	r2, [pc, #168]	; (8000f3c <__sflush_r+0x108>)
 8000e94:	40ca      	lsrs	r2, r1
 8000e96:	07d6      	lsls	r6, r2, #31
 8000e98:	d528      	bpl.n	8000eec <__sflush_r+0xb8>
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	6062      	str	r2, [r4, #4]
 8000e9e:	04d9      	lsls	r1, r3, #19
 8000ea0:	6922      	ldr	r2, [r4, #16]
 8000ea2:	6022      	str	r2, [r4, #0]
 8000ea4:	d504      	bpl.n	8000eb0 <__sflush_r+0x7c>
 8000ea6:	1c42      	adds	r2, r0, #1
 8000ea8:	d101      	bne.n	8000eae <__sflush_r+0x7a>
 8000eaa:	682b      	ldr	r3, [r5, #0]
 8000eac:	b903      	cbnz	r3, 8000eb0 <__sflush_r+0x7c>
 8000eae:	6560      	str	r0, [r4, #84]	; 0x54
 8000eb0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000eb2:	602f      	str	r7, [r5, #0]
 8000eb4:	2900      	cmp	r1, #0
 8000eb6:	d0ca      	beq.n	8000e4e <__sflush_r+0x1a>
 8000eb8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ebc:	4299      	cmp	r1, r3
 8000ebe:	d002      	beq.n	8000ec6 <__sflush_r+0x92>
 8000ec0:	4628      	mov	r0, r5
 8000ec2:	f000 f9d5 	bl	8001270 <_free_r>
 8000ec6:	2000      	movs	r0, #0
 8000ec8:	6360      	str	r0, [r4, #52]	; 0x34
 8000eca:	e7c1      	b.n	8000e50 <__sflush_r+0x1c>
 8000ecc:	6a21      	ldr	r1, [r4, #32]
 8000ece:	2301      	movs	r3, #1
 8000ed0:	4628      	mov	r0, r5
 8000ed2:	47b0      	blx	r6
 8000ed4:	1c41      	adds	r1, r0, #1
 8000ed6:	d1c7      	bne.n	8000e68 <__sflush_r+0x34>
 8000ed8:	682b      	ldr	r3, [r5, #0]
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d0c4      	beq.n	8000e68 <__sflush_r+0x34>
 8000ede:	2b1d      	cmp	r3, #29
 8000ee0:	d001      	beq.n	8000ee6 <__sflush_r+0xb2>
 8000ee2:	2b16      	cmp	r3, #22
 8000ee4:	d101      	bne.n	8000eea <__sflush_r+0xb6>
 8000ee6:	602f      	str	r7, [r5, #0]
 8000ee8:	e7b1      	b.n	8000e4e <__sflush_r+0x1a>
 8000eea:	89a3      	ldrh	r3, [r4, #12]
 8000eec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ef0:	81a3      	strh	r3, [r4, #12]
 8000ef2:	e7ad      	b.n	8000e50 <__sflush_r+0x1c>
 8000ef4:	690f      	ldr	r7, [r1, #16]
 8000ef6:	2f00      	cmp	r7, #0
 8000ef8:	d0a9      	beq.n	8000e4e <__sflush_r+0x1a>
 8000efa:	0793      	lsls	r3, r2, #30
 8000efc:	680e      	ldr	r6, [r1, #0]
 8000efe:	bf08      	it	eq
 8000f00:	694b      	ldreq	r3, [r1, #20]
 8000f02:	600f      	str	r7, [r1, #0]
 8000f04:	bf18      	it	ne
 8000f06:	2300      	movne	r3, #0
 8000f08:	eba6 0807 	sub.w	r8, r6, r7
 8000f0c:	608b      	str	r3, [r1, #8]
 8000f0e:	f1b8 0f00 	cmp.w	r8, #0
 8000f12:	dd9c      	ble.n	8000e4e <__sflush_r+0x1a>
 8000f14:	6a21      	ldr	r1, [r4, #32]
 8000f16:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000f18:	4643      	mov	r3, r8
 8000f1a:	463a      	mov	r2, r7
 8000f1c:	4628      	mov	r0, r5
 8000f1e:	47b0      	blx	r6
 8000f20:	2800      	cmp	r0, #0
 8000f22:	dc06      	bgt.n	8000f32 <__sflush_r+0xfe>
 8000f24:	89a3      	ldrh	r3, [r4, #12]
 8000f26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f2a:	81a3      	strh	r3, [r4, #12]
 8000f2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000f30:	e78e      	b.n	8000e50 <__sflush_r+0x1c>
 8000f32:	4407      	add	r7, r0
 8000f34:	eba8 0800 	sub.w	r8, r8, r0
 8000f38:	e7e9      	b.n	8000f0e <__sflush_r+0xda>
 8000f3a:	bf00      	nop
 8000f3c:	20400001 	.word	0x20400001

08000f40 <_fflush_r>:
 8000f40:	b538      	push	{r3, r4, r5, lr}
 8000f42:	690b      	ldr	r3, [r1, #16]
 8000f44:	4605      	mov	r5, r0
 8000f46:	460c      	mov	r4, r1
 8000f48:	b913      	cbnz	r3, 8000f50 <_fflush_r+0x10>
 8000f4a:	2500      	movs	r5, #0
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	bd38      	pop	{r3, r4, r5, pc}
 8000f50:	b118      	cbz	r0, 8000f5a <_fflush_r+0x1a>
 8000f52:	6983      	ldr	r3, [r0, #24]
 8000f54:	b90b      	cbnz	r3, 8000f5a <_fflush_r+0x1a>
 8000f56:	f000 f887 	bl	8001068 <__sinit>
 8000f5a:	4b14      	ldr	r3, [pc, #80]	; (8000fac <_fflush_r+0x6c>)
 8000f5c:	429c      	cmp	r4, r3
 8000f5e:	d11b      	bne.n	8000f98 <_fflush_r+0x58>
 8000f60:	686c      	ldr	r4, [r5, #4]
 8000f62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d0ef      	beq.n	8000f4a <_fflush_r+0xa>
 8000f6a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000f6c:	07d0      	lsls	r0, r2, #31
 8000f6e:	d404      	bmi.n	8000f7a <_fflush_r+0x3a>
 8000f70:	0599      	lsls	r1, r3, #22
 8000f72:	d402      	bmi.n	8000f7a <_fflush_r+0x3a>
 8000f74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f76:	f000 f915 	bl	80011a4 <__retarget_lock_acquire_recursive>
 8000f7a:	4628      	mov	r0, r5
 8000f7c:	4621      	mov	r1, r4
 8000f7e:	f7ff ff59 	bl	8000e34 <__sflush_r>
 8000f82:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000f84:	07da      	lsls	r2, r3, #31
 8000f86:	4605      	mov	r5, r0
 8000f88:	d4e0      	bmi.n	8000f4c <_fflush_r+0xc>
 8000f8a:	89a3      	ldrh	r3, [r4, #12]
 8000f8c:	059b      	lsls	r3, r3, #22
 8000f8e:	d4dd      	bmi.n	8000f4c <_fflush_r+0xc>
 8000f90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f92:	f000 f908 	bl	80011a6 <__retarget_lock_release_recursive>
 8000f96:	e7d9      	b.n	8000f4c <_fflush_r+0xc>
 8000f98:	4b05      	ldr	r3, [pc, #20]	; (8000fb0 <_fflush_r+0x70>)
 8000f9a:	429c      	cmp	r4, r3
 8000f9c:	d101      	bne.n	8000fa2 <_fflush_r+0x62>
 8000f9e:	68ac      	ldr	r4, [r5, #8]
 8000fa0:	e7df      	b.n	8000f62 <_fflush_r+0x22>
 8000fa2:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <_fflush_r+0x74>)
 8000fa4:	429c      	cmp	r4, r3
 8000fa6:	bf08      	it	eq
 8000fa8:	68ec      	ldreq	r4, [r5, #12]
 8000faa:	e7da      	b.n	8000f62 <_fflush_r+0x22>
 8000fac:	08001714 	.word	0x08001714
 8000fb0:	08001734 	.word	0x08001734
 8000fb4:	080016f4 	.word	0x080016f4

08000fb8 <std>:
 8000fb8:	2300      	movs	r3, #0
 8000fba:	b510      	push	{r4, lr}
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	e9c0 3300 	strd	r3, r3, [r0]
 8000fc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000fc6:	6083      	str	r3, [r0, #8]
 8000fc8:	8181      	strh	r1, [r0, #12]
 8000fca:	6643      	str	r3, [r0, #100]	; 0x64
 8000fcc:	81c2      	strh	r2, [r0, #14]
 8000fce:	6183      	str	r3, [r0, #24]
 8000fd0:	4619      	mov	r1, r3
 8000fd2:	2208      	movs	r2, #8
 8000fd4:	305c      	adds	r0, #92	; 0x5c
 8000fd6:	f7ff fb3f 	bl	8000658 <memset>
 8000fda:	4b05      	ldr	r3, [pc, #20]	; (8000ff0 <std+0x38>)
 8000fdc:	6263      	str	r3, [r4, #36]	; 0x24
 8000fde:	4b05      	ldr	r3, [pc, #20]	; (8000ff4 <std+0x3c>)
 8000fe0:	62a3      	str	r3, [r4, #40]	; 0x28
 8000fe2:	4b05      	ldr	r3, [pc, #20]	; (8000ff8 <std+0x40>)
 8000fe4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe6:	4b05      	ldr	r3, [pc, #20]	; (8000ffc <std+0x44>)
 8000fe8:	6224      	str	r4, [r4, #32]
 8000fea:	6323      	str	r3, [r4, #48]	; 0x30
 8000fec:	bd10      	pop	{r4, pc}
 8000fee:	bf00      	nop
 8000ff0:	08001475 	.word	0x08001475
 8000ff4:	08001497 	.word	0x08001497
 8000ff8:	080014cf 	.word	0x080014cf
 8000ffc:	080014f3 	.word	0x080014f3

08001000 <_cleanup_r>:
 8001000:	4901      	ldr	r1, [pc, #4]	; (8001008 <_cleanup_r+0x8>)
 8001002:	f000 b8af 	b.w	8001164 <_fwalk_reent>
 8001006:	bf00      	nop
 8001008:	08000f41 	.word	0x08000f41

0800100c <__sfmoreglue>:
 800100c:	b570      	push	{r4, r5, r6, lr}
 800100e:	1e4a      	subs	r2, r1, #1
 8001010:	2568      	movs	r5, #104	; 0x68
 8001012:	4355      	muls	r5, r2
 8001014:	460e      	mov	r6, r1
 8001016:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800101a:	f000 f979 	bl	8001310 <_malloc_r>
 800101e:	4604      	mov	r4, r0
 8001020:	b140      	cbz	r0, 8001034 <__sfmoreglue+0x28>
 8001022:	2100      	movs	r1, #0
 8001024:	e9c0 1600 	strd	r1, r6, [r0]
 8001028:	300c      	adds	r0, #12
 800102a:	60a0      	str	r0, [r4, #8]
 800102c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001030:	f7ff fb12 	bl	8000658 <memset>
 8001034:	4620      	mov	r0, r4
 8001036:	bd70      	pop	{r4, r5, r6, pc}

08001038 <__sfp_lock_acquire>:
 8001038:	4801      	ldr	r0, [pc, #4]	; (8001040 <__sfp_lock_acquire+0x8>)
 800103a:	f000 b8b3 	b.w	80011a4 <__retarget_lock_acquire_recursive>
 800103e:	bf00      	nop
 8001040:	20000098 	.word	0x20000098

08001044 <__sfp_lock_release>:
 8001044:	4801      	ldr	r0, [pc, #4]	; (800104c <__sfp_lock_release+0x8>)
 8001046:	f000 b8ae 	b.w	80011a6 <__retarget_lock_release_recursive>
 800104a:	bf00      	nop
 800104c:	20000098 	.word	0x20000098

08001050 <__sinit_lock_acquire>:
 8001050:	4801      	ldr	r0, [pc, #4]	; (8001058 <__sinit_lock_acquire+0x8>)
 8001052:	f000 b8a7 	b.w	80011a4 <__retarget_lock_acquire_recursive>
 8001056:	bf00      	nop
 8001058:	20000093 	.word	0x20000093

0800105c <__sinit_lock_release>:
 800105c:	4801      	ldr	r0, [pc, #4]	; (8001064 <__sinit_lock_release+0x8>)
 800105e:	f000 b8a2 	b.w	80011a6 <__retarget_lock_release_recursive>
 8001062:	bf00      	nop
 8001064:	20000093 	.word	0x20000093

08001068 <__sinit>:
 8001068:	b510      	push	{r4, lr}
 800106a:	4604      	mov	r4, r0
 800106c:	f7ff fff0 	bl	8001050 <__sinit_lock_acquire>
 8001070:	69a3      	ldr	r3, [r4, #24]
 8001072:	b11b      	cbz	r3, 800107c <__sinit+0x14>
 8001074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001078:	f7ff bff0 	b.w	800105c <__sinit_lock_release>
 800107c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001080:	6523      	str	r3, [r4, #80]	; 0x50
 8001082:	4b13      	ldr	r3, [pc, #76]	; (80010d0 <__sinit+0x68>)
 8001084:	4a13      	ldr	r2, [pc, #76]	; (80010d4 <__sinit+0x6c>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	62a2      	str	r2, [r4, #40]	; 0x28
 800108a:	42a3      	cmp	r3, r4
 800108c:	bf04      	itt	eq
 800108e:	2301      	moveq	r3, #1
 8001090:	61a3      	streq	r3, [r4, #24]
 8001092:	4620      	mov	r0, r4
 8001094:	f000 f820 	bl	80010d8 <__sfp>
 8001098:	6060      	str	r0, [r4, #4]
 800109a:	4620      	mov	r0, r4
 800109c:	f000 f81c 	bl	80010d8 <__sfp>
 80010a0:	60a0      	str	r0, [r4, #8]
 80010a2:	4620      	mov	r0, r4
 80010a4:	f000 f818 	bl	80010d8 <__sfp>
 80010a8:	2200      	movs	r2, #0
 80010aa:	60e0      	str	r0, [r4, #12]
 80010ac:	2104      	movs	r1, #4
 80010ae:	6860      	ldr	r0, [r4, #4]
 80010b0:	f7ff ff82 	bl	8000fb8 <std>
 80010b4:	68a0      	ldr	r0, [r4, #8]
 80010b6:	2201      	movs	r2, #1
 80010b8:	2109      	movs	r1, #9
 80010ba:	f7ff ff7d 	bl	8000fb8 <std>
 80010be:	68e0      	ldr	r0, [r4, #12]
 80010c0:	2202      	movs	r2, #2
 80010c2:	2112      	movs	r1, #18
 80010c4:	f7ff ff78 	bl	8000fb8 <std>
 80010c8:	2301      	movs	r3, #1
 80010ca:	61a3      	str	r3, [r4, #24]
 80010cc:	e7d2      	b.n	8001074 <__sinit+0xc>
 80010ce:	bf00      	nop
 80010d0:	080016bc 	.word	0x080016bc
 80010d4:	08001001 	.word	0x08001001

080010d8 <__sfp>:
 80010d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010da:	4607      	mov	r7, r0
 80010dc:	f7ff ffac 	bl	8001038 <__sfp_lock_acquire>
 80010e0:	4b1e      	ldr	r3, [pc, #120]	; (800115c <__sfp+0x84>)
 80010e2:	681e      	ldr	r6, [r3, #0]
 80010e4:	69b3      	ldr	r3, [r6, #24]
 80010e6:	b913      	cbnz	r3, 80010ee <__sfp+0x16>
 80010e8:	4630      	mov	r0, r6
 80010ea:	f7ff ffbd 	bl	8001068 <__sinit>
 80010ee:	3648      	adds	r6, #72	; 0x48
 80010f0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80010f4:	3b01      	subs	r3, #1
 80010f6:	d503      	bpl.n	8001100 <__sfp+0x28>
 80010f8:	6833      	ldr	r3, [r6, #0]
 80010fa:	b30b      	cbz	r3, 8001140 <__sfp+0x68>
 80010fc:	6836      	ldr	r6, [r6, #0]
 80010fe:	e7f7      	b.n	80010f0 <__sfp+0x18>
 8001100:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001104:	b9d5      	cbnz	r5, 800113c <__sfp+0x64>
 8001106:	4b16      	ldr	r3, [pc, #88]	; (8001160 <__sfp+0x88>)
 8001108:	60e3      	str	r3, [r4, #12]
 800110a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800110e:	6665      	str	r5, [r4, #100]	; 0x64
 8001110:	f000 f847 	bl	80011a2 <__retarget_lock_init_recursive>
 8001114:	f7ff ff96 	bl	8001044 <__sfp_lock_release>
 8001118:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800111c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001120:	6025      	str	r5, [r4, #0]
 8001122:	61a5      	str	r5, [r4, #24]
 8001124:	2208      	movs	r2, #8
 8001126:	4629      	mov	r1, r5
 8001128:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800112c:	f7ff fa94 	bl	8000658 <memset>
 8001130:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001134:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001138:	4620      	mov	r0, r4
 800113a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800113c:	3468      	adds	r4, #104	; 0x68
 800113e:	e7d9      	b.n	80010f4 <__sfp+0x1c>
 8001140:	2104      	movs	r1, #4
 8001142:	4638      	mov	r0, r7
 8001144:	f7ff ff62 	bl	800100c <__sfmoreglue>
 8001148:	4604      	mov	r4, r0
 800114a:	6030      	str	r0, [r6, #0]
 800114c:	2800      	cmp	r0, #0
 800114e:	d1d5      	bne.n	80010fc <__sfp+0x24>
 8001150:	f7ff ff78 	bl	8001044 <__sfp_lock_release>
 8001154:	230c      	movs	r3, #12
 8001156:	603b      	str	r3, [r7, #0]
 8001158:	e7ee      	b.n	8001138 <__sfp+0x60>
 800115a:	bf00      	nop
 800115c:	080016bc 	.word	0x080016bc
 8001160:	ffff0001 	.word	0xffff0001

08001164 <_fwalk_reent>:
 8001164:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001168:	4606      	mov	r6, r0
 800116a:	4688      	mov	r8, r1
 800116c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001170:	2700      	movs	r7, #0
 8001172:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001176:	f1b9 0901 	subs.w	r9, r9, #1
 800117a:	d505      	bpl.n	8001188 <_fwalk_reent+0x24>
 800117c:	6824      	ldr	r4, [r4, #0]
 800117e:	2c00      	cmp	r4, #0
 8001180:	d1f7      	bne.n	8001172 <_fwalk_reent+0xe>
 8001182:	4638      	mov	r0, r7
 8001184:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001188:	89ab      	ldrh	r3, [r5, #12]
 800118a:	2b01      	cmp	r3, #1
 800118c:	d907      	bls.n	800119e <_fwalk_reent+0x3a>
 800118e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001192:	3301      	adds	r3, #1
 8001194:	d003      	beq.n	800119e <_fwalk_reent+0x3a>
 8001196:	4629      	mov	r1, r5
 8001198:	4630      	mov	r0, r6
 800119a:	47c0      	blx	r8
 800119c:	4307      	orrs	r7, r0
 800119e:	3568      	adds	r5, #104	; 0x68
 80011a0:	e7e9      	b.n	8001176 <_fwalk_reent+0x12>

080011a2 <__retarget_lock_init_recursive>:
 80011a2:	4770      	bx	lr

080011a4 <__retarget_lock_acquire_recursive>:
 80011a4:	4770      	bx	lr

080011a6 <__retarget_lock_release_recursive>:
 80011a6:	4770      	bx	lr

080011a8 <__swhatbuf_r>:
 80011a8:	b570      	push	{r4, r5, r6, lr}
 80011aa:	460e      	mov	r6, r1
 80011ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011b0:	2900      	cmp	r1, #0
 80011b2:	b096      	sub	sp, #88	; 0x58
 80011b4:	4614      	mov	r4, r2
 80011b6:	461d      	mov	r5, r3
 80011b8:	da07      	bge.n	80011ca <__swhatbuf_r+0x22>
 80011ba:	2300      	movs	r3, #0
 80011bc:	602b      	str	r3, [r5, #0]
 80011be:	89b3      	ldrh	r3, [r6, #12]
 80011c0:	061a      	lsls	r2, r3, #24
 80011c2:	d410      	bmi.n	80011e6 <__swhatbuf_r+0x3e>
 80011c4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011c8:	e00e      	b.n	80011e8 <__swhatbuf_r+0x40>
 80011ca:	466a      	mov	r2, sp
 80011cc:	f000 f9b8 	bl	8001540 <_fstat_r>
 80011d0:	2800      	cmp	r0, #0
 80011d2:	dbf2      	blt.n	80011ba <__swhatbuf_r+0x12>
 80011d4:	9a01      	ldr	r2, [sp, #4]
 80011d6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80011da:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80011de:	425a      	negs	r2, r3
 80011e0:	415a      	adcs	r2, r3
 80011e2:	602a      	str	r2, [r5, #0]
 80011e4:	e7ee      	b.n	80011c4 <__swhatbuf_r+0x1c>
 80011e6:	2340      	movs	r3, #64	; 0x40
 80011e8:	2000      	movs	r0, #0
 80011ea:	6023      	str	r3, [r4, #0]
 80011ec:	b016      	add	sp, #88	; 0x58
 80011ee:	bd70      	pop	{r4, r5, r6, pc}

080011f0 <__smakebuf_r>:
 80011f0:	898b      	ldrh	r3, [r1, #12]
 80011f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80011f4:	079d      	lsls	r5, r3, #30
 80011f6:	4606      	mov	r6, r0
 80011f8:	460c      	mov	r4, r1
 80011fa:	d507      	bpl.n	800120c <__smakebuf_r+0x1c>
 80011fc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001200:	6023      	str	r3, [r4, #0]
 8001202:	6123      	str	r3, [r4, #16]
 8001204:	2301      	movs	r3, #1
 8001206:	6163      	str	r3, [r4, #20]
 8001208:	b002      	add	sp, #8
 800120a:	bd70      	pop	{r4, r5, r6, pc}
 800120c:	ab01      	add	r3, sp, #4
 800120e:	466a      	mov	r2, sp
 8001210:	f7ff ffca 	bl	80011a8 <__swhatbuf_r>
 8001214:	9900      	ldr	r1, [sp, #0]
 8001216:	4605      	mov	r5, r0
 8001218:	4630      	mov	r0, r6
 800121a:	f000 f879 	bl	8001310 <_malloc_r>
 800121e:	b948      	cbnz	r0, 8001234 <__smakebuf_r+0x44>
 8001220:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001224:	059a      	lsls	r2, r3, #22
 8001226:	d4ef      	bmi.n	8001208 <__smakebuf_r+0x18>
 8001228:	f023 0303 	bic.w	r3, r3, #3
 800122c:	f043 0302 	orr.w	r3, r3, #2
 8001230:	81a3      	strh	r3, [r4, #12]
 8001232:	e7e3      	b.n	80011fc <__smakebuf_r+0xc>
 8001234:	4b0d      	ldr	r3, [pc, #52]	; (800126c <__smakebuf_r+0x7c>)
 8001236:	62b3      	str	r3, [r6, #40]	; 0x28
 8001238:	89a3      	ldrh	r3, [r4, #12]
 800123a:	6020      	str	r0, [r4, #0]
 800123c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001240:	81a3      	strh	r3, [r4, #12]
 8001242:	9b00      	ldr	r3, [sp, #0]
 8001244:	6163      	str	r3, [r4, #20]
 8001246:	9b01      	ldr	r3, [sp, #4]
 8001248:	6120      	str	r0, [r4, #16]
 800124a:	b15b      	cbz	r3, 8001264 <__smakebuf_r+0x74>
 800124c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001250:	4630      	mov	r0, r6
 8001252:	f000 f987 	bl	8001564 <_isatty_r>
 8001256:	b128      	cbz	r0, 8001264 <__smakebuf_r+0x74>
 8001258:	89a3      	ldrh	r3, [r4, #12]
 800125a:	f023 0303 	bic.w	r3, r3, #3
 800125e:	f043 0301 	orr.w	r3, r3, #1
 8001262:	81a3      	strh	r3, [r4, #12]
 8001264:	89a0      	ldrh	r0, [r4, #12]
 8001266:	4305      	orrs	r5, r0
 8001268:	81a5      	strh	r5, [r4, #12]
 800126a:	e7cd      	b.n	8001208 <__smakebuf_r+0x18>
 800126c:	08001001 	.word	0x08001001

08001270 <_free_r>:
 8001270:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001272:	2900      	cmp	r1, #0
 8001274:	d048      	beq.n	8001308 <_free_r+0x98>
 8001276:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800127a:	9001      	str	r0, [sp, #4]
 800127c:	2b00      	cmp	r3, #0
 800127e:	f1a1 0404 	sub.w	r4, r1, #4
 8001282:	bfb8      	it	lt
 8001284:	18e4      	addlt	r4, r4, r3
 8001286:	f000 f98f 	bl	80015a8 <__malloc_lock>
 800128a:	4a20      	ldr	r2, [pc, #128]	; (800130c <_free_r+0x9c>)
 800128c:	9801      	ldr	r0, [sp, #4]
 800128e:	6813      	ldr	r3, [r2, #0]
 8001290:	4615      	mov	r5, r2
 8001292:	b933      	cbnz	r3, 80012a2 <_free_r+0x32>
 8001294:	6063      	str	r3, [r4, #4]
 8001296:	6014      	str	r4, [r2, #0]
 8001298:	b003      	add	sp, #12
 800129a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800129e:	f000 b989 	b.w	80015b4 <__malloc_unlock>
 80012a2:	42a3      	cmp	r3, r4
 80012a4:	d90b      	bls.n	80012be <_free_r+0x4e>
 80012a6:	6821      	ldr	r1, [r4, #0]
 80012a8:	1862      	adds	r2, r4, r1
 80012aa:	4293      	cmp	r3, r2
 80012ac:	bf04      	itt	eq
 80012ae:	681a      	ldreq	r2, [r3, #0]
 80012b0:	685b      	ldreq	r3, [r3, #4]
 80012b2:	6063      	str	r3, [r4, #4]
 80012b4:	bf04      	itt	eq
 80012b6:	1852      	addeq	r2, r2, r1
 80012b8:	6022      	streq	r2, [r4, #0]
 80012ba:	602c      	str	r4, [r5, #0]
 80012bc:	e7ec      	b.n	8001298 <_free_r+0x28>
 80012be:	461a      	mov	r2, r3
 80012c0:	685b      	ldr	r3, [r3, #4]
 80012c2:	b10b      	cbz	r3, 80012c8 <_free_r+0x58>
 80012c4:	42a3      	cmp	r3, r4
 80012c6:	d9fa      	bls.n	80012be <_free_r+0x4e>
 80012c8:	6811      	ldr	r1, [r2, #0]
 80012ca:	1855      	adds	r5, r2, r1
 80012cc:	42a5      	cmp	r5, r4
 80012ce:	d10b      	bne.n	80012e8 <_free_r+0x78>
 80012d0:	6824      	ldr	r4, [r4, #0]
 80012d2:	4421      	add	r1, r4
 80012d4:	1854      	adds	r4, r2, r1
 80012d6:	42a3      	cmp	r3, r4
 80012d8:	6011      	str	r1, [r2, #0]
 80012da:	d1dd      	bne.n	8001298 <_free_r+0x28>
 80012dc:	681c      	ldr	r4, [r3, #0]
 80012de:	685b      	ldr	r3, [r3, #4]
 80012e0:	6053      	str	r3, [r2, #4]
 80012e2:	4421      	add	r1, r4
 80012e4:	6011      	str	r1, [r2, #0]
 80012e6:	e7d7      	b.n	8001298 <_free_r+0x28>
 80012e8:	d902      	bls.n	80012f0 <_free_r+0x80>
 80012ea:	230c      	movs	r3, #12
 80012ec:	6003      	str	r3, [r0, #0]
 80012ee:	e7d3      	b.n	8001298 <_free_r+0x28>
 80012f0:	6825      	ldr	r5, [r4, #0]
 80012f2:	1961      	adds	r1, r4, r5
 80012f4:	428b      	cmp	r3, r1
 80012f6:	bf04      	itt	eq
 80012f8:	6819      	ldreq	r1, [r3, #0]
 80012fa:	685b      	ldreq	r3, [r3, #4]
 80012fc:	6063      	str	r3, [r4, #4]
 80012fe:	bf04      	itt	eq
 8001300:	1949      	addeq	r1, r1, r5
 8001302:	6021      	streq	r1, [r4, #0]
 8001304:	6054      	str	r4, [r2, #4]
 8001306:	e7c7      	b.n	8001298 <_free_r+0x28>
 8001308:	b003      	add	sp, #12
 800130a:	bd30      	pop	{r4, r5, pc}
 800130c:	20000084 	.word	0x20000084

08001310 <_malloc_r>:
 8001310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001312:	1ccd      	adds	r5, r1, #3
 8001314:	f025 0503 	bic.w	r5, r5, #3
 8001318:	3508      	adds	r5, #8
 800131a:	2d0c      	cmp	r5, #12
 800131c:	bf38      	it	cc
 800131e:	250c      	movcc	r5, #12
 8001320:	2d00      	cmp	r5, #0
 8001322:	4606      	mov	r6, r0
 8001324:	db01      	blt.n	800132a <_malloc_r+0x1a>
 8001326:	42a9      	cmp	r1, r5
 8001328:	d903      	bls.n	8001332 <_malloc_r+0x22>
 800132a:	230c      	movs	r3, #12
 800132c:	6033      	str	r3, [r6, #0]
 800132e:	2000      	movs	r0, #0
 8001330:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001332:	f000 f939 	bl	80015a8 <__malloc_lock>
 8001336:	4921      	ldr	r1, [pc, #132]	; (80013bc <_malloc_r+0xac>)
 8001338:	680a      	ldr	r2, [r1, #0]
 800133a:	4614      	mov	r4, r2
 800133c:	b99c      	cbnz	r4, 8001366 <_malloc_r+0x56>
 800133e:	4f20      	ldr	r7, [pc, #128]	; (80013c0 <_malloc_r+0xb0>)
 8001340:	683b      	ldr	r3, [r7, #0]
 8001342:	b923      	cbnz	r3, 800134e <_malloc_r+0x3e>
 8001344:	4621      	mov	r1, r4
 8001346:	4630      	mov	r0, r6
 8001348:	f000 f884 	bl	8001454 <_sbrk_r>
 800134c:	6038      	str	r0, [r7, #0]
 800134e:	4629      	mov	r1, r5
 8001350:	4630      	mov	r0, r6
 8001352:	f000 f87f 	bl	8001454 <_sbrk_r>
 8001356:	1c43      	adds	r3, r0, #1
 8001358:	d123      	bne.n	80013a2 <_malloc_r+0x92>
 800135a:	230c      	movs	r3, #12
 800135c:	6033      	str	r3, [r6, #0]
 800135e:	4630      	mov	r0, r6
 8001360:	f000 f928 	bl	80015b4 <__malloc_unlock>
 8001364:	e7e3      	b.n	800132e <_malloc_r+0x1e>
 8001366:	6823      	ldr	r3, [r4, #0]
 8001368:	1b5b      	subs	r3, r3, r5
 800136a:	d417      	bmi.n	800139c <_malloc_r+0x8c>
 800136c:	2b0b      	cmp	r3, #11
 800136e:	d903      	bls.n	8001378 <_malloc_r+0x68>
 8001370:	6023      	str	r3, [r4, #0]
 8001372:	441c      	add	r4, r3
 8001374:	6025      	str	r5, [r4, #0]
 8001376:	e004      	b.n	8001382 <_malloc_r+0x72>
 8001378:	6863      	ldr	r3, [r4, #4]
 800137a:	42a2      	cmp	r2, r4
 800137c:	bf0c      	ite	eq
 800137e:	600b      	streq	r3, [r1, #0]
 8001380:	6053      	strne	r3, [r2, #4]
 8001382:	4630      	mov	r0, r6
 8001384:	f000 f916 	bl	80015b4 <__malloc_unlock>
 8001388:	f104 000b 	add.w	r0, r4, #11
 800138c:	1d23      	adds	r3, r4, #4
 800138e:	f020 0007 	bic.w	r0, r0, #7
 8001392:	1ac2      	subs	r2, r0, r3
 8001394:	d0cc      	beq.n	8001330 <_malloc_r+0x20>
 8001396:	1a1b      	subs	r3, r3, r0
 8001398:	50a3      	str	r3, [r4, r2]
 800139a:	e7c9      	b.n	8001330 <_malloc_r+0x20>
 800139c:	4622      	mov	r2, r4
 800139e:	6864      	ldr	r4, [r4, #4]
 80013a0:	e7cc      	b.n	800133c <_malloc_r+0x2c>
 80013a2:	1cc4      	adds	r4, r0, #3
 80013a4:	f024 0403 	bic.w	r4, r4, #3
 80013a8:	42a0      	cmp	r0, r4
 80013aa:	d0e3      	beq.n	8001374 <_malloc_r+0x64>
 80013ac:	1a21      	subs	r1, r4, r0
 80013ae:	4630      	mov	r0, r6
 80013b0:	f000 f850 	bl	8001454 <_sbrk_r>
 80013b4:	3001      	adds	r0, #1
 80013b6:	d1dd      	bne.n	8001374 <_malloc_r+0x64>
 80013b8:	e7cf      	b.n	800135a <_malloc_r+0x4a>
 80013ba:	bf00      	nop
 80013bc:	20000084 	.word	0x20000084
 80013c0:	20000088 	.word	0x20000088

080013c4 <_putc_r>:
 80013c4:	b570      	push	{r4, r5, r6, lr}
 80013c6:	460d      	mov	r5, r1
 80013c8:	4614      	mov	r4, r2
 80013ca:	4606      	mov	r6, r0
 80013cc:	b118      	cbz	r0, 80013d6 <_putc_r+0x12>
 80013ce:	6983      	ldr	r3, [r0, #24]
 80013d0:	b90b      	cbnz	r3, 80013d6 <_putc_r+0x12>
 80013d2:	f7ff fe49 	bl	8001068 <__sinit>
 80013d6:	4b1c      	ldr	r3, [pc, #112]	; (8001448 <_putc_r+0x84>)
 80013d8:	429c      	cmp	r4, r3
 80013da:	d124      	bne.n	8001426 <_putc_r+0x62>
 80013dc:	6874      	ldr	r4, [r6, #4]
 80013de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80013e0:	07d8      	lsls	r0, r3, #31
 80013e2:	d405      	bmi.n	80013f0 <_putc_r+0x2c>
 80013e4:	89a3      	ldrh	r3, [r4, #12]
 80013e6:	0599      	lsls	r1, r3, #22
 80013e8:	d402      	bmi.n	80013f0 <_putc_r+0x2c>
 80013ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013ec:	f7ff feda 	bl	80011a4 <__retarget_lock_acquire_recursive>
 80013f0:	68a3      	ldr	r3, [r4, #8]
 80013f2:	3b01      	subs	r3, #1
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	60a3      	str	r3, [r4, #8]
 80013f8:	da05      	bge.n	8001406 <_putc_r+0x42>
 80013fa:	69a2      	ldr	r2, [r4, #24]
 80013fc:	4293      	cmp	r3, r2
 80013fe:	db1c      	blt.n	800143a <_putc_r+0x76>
 8001400:	b2eb      	uxtb	r3, r5
 8001402:	2b0a      	cmp	r3, #10
 8001404:	d019      	beq.n	800143a <_putc_r+0x76>
 8001406:	6823      	ldr	r3, [r4, #0]
 8001408:	1c5a      	adds	r2, r3, #1
 800140a:	6022      	str	r2, [r4, #0]
 800140c:	701d      	strb	r5, [r3, #0]
 800140e:	b2ed      	uxtb	r5, r5
 8001410:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001412:	07da      	lsls	r2, r3, #31
 8001414:	d405      	bmi.n	8001422 <_putc_r+0x5e>
 8001416:	89a3      	ldrh	r3, [r4, #12]
 8001418:	059b      	lsls	r3, r3, #22
 800141a:	d402      	bmi.n	8001422 <_putc_r+0x5e>
 800141c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800141e:	f7ff fec2 	bl	80011a6 <__retarget_lock_release_recursive>
 8001422:	4628      	mov	r0, r5
 8001424:	bd70      	pop	{r4, r5, r6, pc}
 8001426:	4b09      	ldr	r3, [pc, #36]	; (800144c <_putc_r+0x88>)
 8001428:	429c      	cmp	r4, r3
 800142a:	d101      	bne.n	8001430 <_putc_r+0x6c>
 800142c:	68b4      	ldr	r4, [r6, #8]
 800142e:	e7d6      	b.n	80013de <_putc_r+0x1a>
 8001430:	4b07      	ldr	r3, [pc, #28]	; (8001450 <_putc_r+0x8c>)
 8001432:	429c      	cmp	r4, r3
 8001434:	bf08      	it	eq
 8001436:	68f4      	ldreq	r4, [r6, #12]
 8001438:	e7d1      	b.n	80013de <_putc_r+0x1a>
 800143a:	4629      	mov	r1, r5
 800143c:	4622      	mov	r2, r4
 800143e:	4630      	mov	r0, r6
 8001440:	f7ff fc38 	bl	8000cb4 <__swbuf_r>
 8001444:	4605      	mov	r5, r0
 8001446:	e7e3      	b.n	8001410 <_putc_r+0x4c>
 8001448:	08001714 	.word	0x08001714
 800144c:	08001734 	.word	0x08001734
 8001450:	080016f4 	.word	0x080016f4

08001454 <_sbrk_r>:
 8001454:	b538      	push	{r3, r4, r5, lr}
 8001456:	4d06      	ldr	r5, [pc, #24]	; (8001470 <_sbrk_r+0x1c>)
 8001458:	2300      	movs	r3, #0
 800145a:	4604      	mov	r4, r0
 800145c:	4608      	mov	r0, r1
 800145e:	602b      	str	r3, [r5, #0]
 8001460:	f000 f8e8 	bl	8001634 <_sbrk>
 8001464:	1c43      	adds	r3, r0, #1
 8001466:	d102      	bne.n	800146e <_sbrk_r+0x1a>
 8001468:	682b      	ldr	r3, [r5, #0]
 800146a:	b103      	cbz	r3, 800146e <_sbrk_r+0x1a>
 800146c:	6023      	str	r3, [r4, #0]
 800146e:	bd38      	pop	{r3, r4, r5, pc}
 8001470:	2000009c 	.word	0x2000009c

08001474 <__sread>:
 8001474:	b510      	push	{r4, lr}
 8001476:	460c      	mov	r4, r1
 8001478:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800147c:	f000 f8a0 	bl	80015c0 <_read_r>
 8001480:	2800      	cmp	r0, #0
 8001482:	bfab      	itete	ge
 8001484:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001486:	89a3      	ldrhlt	r3, [r4, #12]
 8001488:	181b      	addge	r3, r3, r0
 800148a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800148e:	bfac      	ite	ge
 8001490:	6563      	strge	r3, [r4, #84]	; 0x54
 8001492:	81a3      	strhlt	r3, [r4, #12]
 8001494:	bd10      	pop	{r4, pc}

08001496 <__swrite>:
 8001496:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800149a:	461f      	mov	r7, r3
 800149c:	898b      	ldrh	r3, [r1, #12]
 800149e:	05db      	lsls	r3, r3, #23
 80014a0:	4605      	mov	r5, r0
 80014a2:	460c      	mov	r4, r1
 80014a4:	4616      	mov	r6, r2
 80014a6:	d505      	bpl.n	80014b4 <__swrite+0x1e>
 80014a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014ac:	2302      	movs	r3, #2
 80014ae:	2200      	movs	r2, #0
 80014b0:	f000 f868 	bl	8001584 <_lseek_r>
 80014b4:	89a3      	ldrh	r3, [r4, #12]
 80014b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014be:	81a3      	strh	r3, [r4, #12]
 80014c0:	4632      	mov	r2, r6
 80014c2:	463b      	mov	r3, r7
 80014c4:	4628      	mov	r0, r5
 80014c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014ca:	f000 b817 	b.w	80014fc <_write_r>

080014ce <__sseek>:
 80014ce:	b510      	push	{r4, lr}
 80014d0:	460c      	mov	r4, r1
 80014d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014d6:	f000 f855 	bl	8001584 <_lseek_r>
 80014da:	1c43      	adds	r3, r0, #1
 80014dc:	89a3      	ldrh	r3, [r4, #12]
 80014de:	bf15      	itete	ne
 80014e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80014e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014ea:	81a3      	strheq	r3, [r4, #12]
 80014ec:	bf18      	it	ne
 80014ee:	81a3      	strhne	r3, [r4, #12]
 80014f0:	bd10      	pop	{r4, pc}

080014f2 <__sclose>:
 80014f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014f6:	f000 b813 	b.w	8001520 <_close_r>
	...

080014fc <_write_r>:
 80014fc:	b538      	push	{r3, r4, r5, lr}
 80014fe:	4d07      	ldr	r5, [pc, #28]	; (800151c <_write_r+0x20>)
 8001500:	4604      	mov	r4, r0
 8001502:	4608      	mov	r0, r1
 8001504:	4611      	mov	r1, r2
 8001506:	2200      	movs	r2, #0
 8001508:	602a      	str	r2, [r5, #0]
 800150a:	461a      	mov	r2, r3
 800150c:	f7fe fee7 	bl	80002de <_write>
 8001510:	1c43      	adds	r3, r0, #1
 8001512:	d102      	bne.n	800151a <_write_r+0x1e>
 8001514:	682b      	ldr	r3, [r5, #0]
 8001516:	b103      	cbz	r3, 800151a <_write_r+0x1e>
 8001518:	6023      	str	r3, [r4, #0]
 800151a:	bd38      	pop	{r3, r4, r5, pc}
 800151c:	2000009c 	.word	0x2000009c

08001520 <_close_r>:
 8001520:	b538      	push	{r3, r4, r5, lr}
 8001522:	4d06      	ldr	r5, [pc, #24]	; (800153c <_close_r+0x1c>)
 8001524:	2300      	movs	r3, #0
 8001526:	4604      	mov	r4, r0
 8001528:	4608      	mov	r0, r1
 800152a:	602b      	str	r3, [r5, #0]
 800152c:	f000 f85a 	bl	80015e4 <_close>
 8001530:	1c43      	adds	r3, r0, #1
 8001532:	d102      	bne.n	800153a <_close_r+0x1a>
 8001534:	682b      	ldr	r3, [r5, #0]
 8001536:	b103      	cbz	r3, 800153a <_close_r+0x1a>
 8001538:	6023      	str	r3, [r4, #0]
 800153a:	bd38      	pop	{r3, r4, r5, pc}
 800153c:	2000009c 	.word	0x2000009c

08001540 <_fstat_r>:
 8001540:	b538      	push	{r3, r4, r5, lr}
 8001542:	4d07      	ldr	r5, [pc, #28]	; (8001560 <_fstat_r+0x20>)
 8001544:	2300      	movs	r3, #0
 8001546:	4604      	mov	r4, r0
 8001548:	4608      	mov	r0, r1
 800154a:	4611      	mov	r1, r2
 800154c:	602b      	str	r3, [r5, #0]
 800154e:	f000 f851 	bl	80015f4 <_fstat>
 8001552:	1c43      	adds	r3, r0, #1
 8001554:	d102      	bne.n	800155c <_fstat_r+0x1c>
 8001556:	682b      	ldr	r3, [r5, #0]
 8001558:	b103      	cbz	r3, 800155c <_fstat_r+0x1c>
 800155a:	6023      	str	r3, [r4, #0]
 800155c:	bd38      	pop	{r3, r4, r5, pc}
 800155e:	bf00      	nop
 8001560:	2000009c 	.word	0x2000009c

08001564 <_isatty_r>:
 8001564:	b538      	push	{r3, r4, r5, lr}
 8001566:	4d06      	ldr	r5, [pc, #24]	; (8001580 <_isatty_r+0x1c>)
 8001568:	2300      	movs	r3, #0
 800156a:	4604      	mov	r4, r0
 800156c:	4608      	mov	r0, r1
 800156e:	602b      	str	r3, [r5, #0]
 8001570:	f000 f848 	bl	8001604 <_isatty>
 8001574:	1c43      	adds	r3, r0, #1
 8001576:	d102      	bne.n	800157e <_isatty_r+0x1a>
 8001578:	682b      	ldr	r3, [r5, #0]
 800157a:	b103      	cbz	r3, 800157e <_isatty_r+0x1a>
 800157c:	6023      	str	r3, [r4, #0]
 800157e:	bd38      	pop	{r3, r4, r5, pc}
 8001580:	2000009c 	.word	0x2000009c

08001584 <_lseek_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4d07      	ldr	r5, [pc, #28]	; (80015a4 <_lseek_r+0x20>)
 8001588:	4604      	mov	r4, r0
 800158a:	4608      	mov	r0, r1
 800158c:	4611      	mov	r1, r2
 800158e:	2200      	movs	r2, #0
 8001590:	602a      	str	r2, [r5, #0]
 8001592:	461a      	mov	r2, r3
 8001594:	f000 f83e 	bl	8001614 <_lseek>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_lseek_r+0x1e>
 800159c:	682b      	ldr	r3, [r5, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_lseek_r+0x1e>
 80015a0:	6023      	str	r3, [r4, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	2000009c 	.word	0x2000009c

080015a8 <__malloc_lock>:
 80015a8:	4801      	ldr	r0, [pc, #4]	; (80015b0 <__malloc_lock+0x8>)
 80015aa:	f7ff bdfb 	b.w	80011a4 <__retarget_lock_acquire_recursive>
 80015ae:	bf00      	nop
 80015b0:	20000094 	.word	0x20000094

080015b4 <__malloc_unlock>:
 80015b4:	4801      	ldr	r0, [pc, #4]	; (80015bc <__malloc_unlock+0x8>)
 80015b6:	f7ff bdf6 	b.w	80011a6 <__retarget_lock_release_recursive>
 80015ba:	bf00      	nop
 80015bc:	20000094 	.word	0x20000094

080015c0 <_read_r>:
 80015c0:	b538      	push	{r3, r4, r5, lr}
 80015c2:	4d07      	ldr	r5, [pc, #28]	; (80015e0 <_read_r+0x20>)
 80015c4:	4604      	mov	r4, r0
 80015c6:	4608      	mov	r0, r1
 80015c8:	4611      	mov	r1, r2
 80015ca:	2200      	movs	r2, #0
 80015cc:	602a      	str	r2, [r5, #0]
 80015ce:	461a      	mov	r2, r3
 80015d0:	f000 f828 	bl	8001624 <_read>
 80015d4:	1c43      	adds	r3, r0, #1
 80015d6:	d102      	bne.n	80015de <_read_r+0x1e>
 80015d8:	682b      	ldr	r3, [r5, #0]
 80015da:	b103      	cbz	r3, 80015de <_read_r+0x1e>
 80015dc:	6023      	str	r3, [r4, #0]
 80015de:	bd38      	pop	{r3, r4, r5, pc}
 80015e0:	2000009c 	.word	0x2000009c

080015e4 <_close>:
 80015e4:	4b02      	ldr	r3, [pc, #8]	; (80015f0 <_close+0xc>)
 80015e6:	2258      	movs	r2, #88	; 0x58
 80015e8:	601a      	str	r2, [r3, #0]
 80015ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015ee:	4770      	bx	lr
 80015f0:	2000009c 	.word	0x2000009c

080015f4 <_fstat>:
 80015f4:	4b02      	ldr	r3, [pc, #8]	; (8001600 <_fstat+0xc>)
 80015f6:	2258      	movs	r2, #88	; 0x58
 80015f8:	601a      	str	r2, [r3, #0]
 80015fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015fe:	4770      	bx	lr
 8001600:	2000009c 	.word	0x2000009c

08001604 <_isatty>:
 8001604:	4b02      	ldr	r3, [pc, #8]	; (8001610 <_isatty+0xc>)
 8001606:	2258      	movs	r2, #88	; 0x58
 8001608:	601a      	str	r2, [r3, #0]
 800160a:	2000      	movs	r0, #0
 800160c:	4770      	bx	lr
 800160e:	bf00      	nop
 8001610:	2000009c 	.word	0x2000009c

08001614 <_lseek>:
 8001614:	4b02      	ldr	r3, [pc, #8]	; (8001620 <_lseek+0xc>)
 8001616:	2258      	movs	r2, #88	; 0x58
 8001618:	601a      	str	r2, [r3, #0]
 800161a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800161e:	4770      	bx	lr
 8001620:	2000009c 	.word	0x2000009c

08001624 <_read>:
 8001624:	4b02      	ldr	r3, [pc, #8]	; (8001630 <_read+0xc>)
 8001626:	2258      	movs	r2, #88	; 0x58
 8001628:	601a      	str	r2, [r3, #0]
 800162a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800162e:	4770      	bx	lr
 8001630:	2000009c 	.word	0x2000009c

08001634 <_sbrk>:
 8001634:	4b04      	ldr	r3, [pc, #16]	; (8001648 <_sbrk+0x14>)
 8001636:	6819      	ldr	r1, [r3, #0]
 8001638:	4602      	mov	r2, r0
 800163a:	b909      	cbnz	r1, 8001640 <_sbrk+0xc>
 800163c:	4903      	ldr	r1, [pc, #12]	; (800164c <_sbrk+0x18>)
 800163e:	6019      	str	r1, [r3, #0]
 8001640:	6818      	ldr	r0, [r3, #0]
 8001642:	4402      	add	r2, r0
 8001644:	601a      	str	r2, [r3, #0]
 8001646:	4770      	bx	lr
 8001648:	2000008c 	.word	0x2000008c
 800164c:	200000a0 	.word	0x200000a0

08001650 <_init>:
 8001650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001652:	bf00      	nop
 8001654:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001656:	bc08      	pop	{r3}
 8001658:	469e      	mov	lr, r3
 800165a:	4770      	bx	lr

0800165c <_fini>:
 800165c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800165e:	bf00      	nop
 8001660:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001662:	bc08      	pop	{r3}
 8001664:	469e      	mov	lr, r3
 8001666:	4770      	bx	lr
